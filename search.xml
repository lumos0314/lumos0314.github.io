<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[怎样做好项目管理]]></title>
    <url>%2F2020%2F08%2F26%2F%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%2Findex%2F</url>
    <content type="text"><![CDATA[当算法、算力和数据条件逐渐成熟，“商业落地”成为人工智能发展到当下阶段鲜明的主题词。 过去人工智能技术驱动阶段在AI算法模型比拼，如今更要依赖商业场景洞察、专家团队实力，将AI技术与行业实际需求相结合，产生应用与经济价值。 – 《艾瑞：人工智能产业的未来发展》 AI公司通过开展与政府、企业、高校的合作、承接一个又一个项目来开发应用于具体场景、解决实际问题、带来可观收益的AI产品。因而对于AI公司的产品经理来说，项目管理的能力就显得十分重要。本文记录：作为产品经理如何做好项目管理工作。（转载自人人都是产品经理侵删） 做好AI产品经理1、体系化了解当前行业的情况； 2、不同类型的AI产品经理的能力模型和工作方法、流程要点； 3、明确对不同技术知识需要掌握的程度，根据自身实际情况和目标方向深入学习； 4、和经验丰富的一线行业专家多交流。 做好项目管理一个项目管理的流程分为这么几个阶段：项目启动——项目计划——项目执行和监控——项目收尾 在整个项目的运转过程中，从最开始的来自领导的战略规划启动了项目，到前期的项目计划、需求转化与中期的项目执行和跟进，以及后期的项目收尾总结会，每一个环节都有产品经理的身影。所以对于产品们来说，了解项目管理的大致流程，合理分配资源就显得更加重要了。 产品经理如果来负责一个项目的管理，在每一个阶段都要做哪些工作: 项目启动阶段 产品经理在项目启动前，有这么几个问题需要提前去了解和熟悉： 1、为什么要立项？ 2、项目目标是什么？ 3、项目的相关人员都有哪些？ 4、怎么立项？ ▍ 第一个问题，为什么要立项？ 作为产品经理的你需要去了解这个项目的来龙去脉，最好的方式是和你的上级或者BOSS沟通，因为他们掌握的信息量远远比你大且比你多，所以通过和他们沟通再加上自己理解，就能够对项目立项的原因有一个清晰的认知。 当然，有时候项目立项，可能就是产品版本的定期迭代，这个时候产品经理对为什么要立项恐怕是比谁都更清楚了。 ▍ 第二个问题，项目目标是什么？ 产品经理作为项目的负责人，是一定要明白整个项目的目标是什么，然后在里面找出最核心的目标。例如有的项目是时间（越快越好，花多少钱无所谓），有的项目是钱（做慢点没关系，但是要花最少的钱）。这些都可以通过跟你的领导聊一聊聊出这些信息，知道了项目目标后你需要把这个目标用准确的文字写下来。 对，一定要写下来，因为口说无凭，再一个写下来的东西才能成为所有人具体执行的方向和准则。 ▍ 第三个问题，项目的相关人员都有哪些？ 关于干系人，宝洁的方法论是找出PACE。P是Participant（参与者），A是Approver（审批者），C是Consultant（顾问），E是Executor（执行者）。当然，产品经理（尤其是创业公司的产品）在日常的项目工作中，恐怕不会有这么繁琐的流程，所以，也就遵循一切从简的原则。 项目相关人员，可以从这几个角度去考虑下，如哪些人或部门会受到项目结果的影响，哪些人可为项目提供资源（人、财、物）等。当然，在互联网公司，常见的相关人员也就是老板、产品经理、项目经理、项目团队（包含设计、开发、测试、运维等）及用户等。 找到了项目的相关人员后，现在你要做的就是把团队成员绑到自己的船上。你需要去了解团队里每个成员的核心KPI，也就是他们于这个项目的需求是什么，做这个项目可以给他们带来什么。如果这个项目没被囊括在这个成员的工作评价 list 里面，你需要去找他的老板沟通。 根据我的经验，85%出工不出力的情况都是因为你的项目根本不会对这个成员的KPI有什么正向的帮助。当然，如果找他的老板沟通无效，还有最后一招：感情投资，请那个成员撸串、吃饭，利用感情让他帮你做好这个项目。 ▍ 第四个问题，怎么立项？ 通常来说，这个时候需要开一个项目启动大会。这个启动大会的目的是召集项目团队成员，成员之间初步认识一下，产品经理主持会议，然后清楚地传达项目要做什么，目标是什么，为什么要做，怎么做，谁来做等等。 另外，跟所有的启动大会一样，项目的启动大会，也需要给团队成员来点鸡汤、打点鸡血。产品经理需要去统一团队的思想，明确团队的管理和运作方式，以及团队的沟通机制等，产品经理需要动员团队成员积极参与项目，并高质量地完成项目。 这个时候，项目相关的文档其实应该已经完成了，因为只有当详细的产品需求文档有了之后，开发团队才能估算项目时间及里程碑等。也有另一种情况，那就是项目本身包括了需求分析阶段，所以详细的需求文档是在立项之后才开始进行调研和撰写。 不管怎么说，明确的产品需求和详细的需求文档，都是项目得以顺利进行的基本前提保障，所以，产品经理的规划能力、撰写文档的能力在这个时候就显得尤为重要了。 项目计划阶段 完成了项目的启动，接下来就要开始进行项目计划了，所谓的项目计划，其主要工作就是工作任务分解，任务优先级安排，资源、工期、成本估算，以及风险计划和沟通计划等。 ▍工作任务分解 工作任务分解，在项目管理中也有专门的术语叫做“工作分解结构”（WBS），指的是以可交付成果为导向对项目要素进行的分组。它其实归纳和定义了项目的整个工作范围，从项目目标开始分解，逐层下降，每下降一层，代表对项目工作的更详细的定义。 产品经理在每一个版本的迭代规划中，都需要从产品需求池中捞一些比较重要的需求出来放到项目需求里来，这正好符合敏捷开发的思想，饭是要一口一口吃的，项目也是一样，不可能一次性把所有需求都搞定。所以，我们需要通过一个版本一个版本来完成，在做版本的工作任务分解的时候，一定要将任务分解到不能再分为止，任务的粒度一定要细，如果太粗，则很有可能会出现一些任务被忽略，从而影响整个项目的进度和计划。 一般的工作任务分解方法有：按照产品的物理结构分解、按照产品的功能模块进行分解、按照实施过程来进行分解、或者是按照项目的地域分布等。比较常用的是按功能模块来进行分解，再结合产品的实施过程来进行分解。 以微信公众号的开发为例： 微信公众号的开发就涉及微信端开发和PC管理后台的开发，这个时候如果进行任务分解， 最基本的方向就要分为微信端任务开发、PC管理端任务开发。 而微信端任务开发，又可细分为需求梳理、产品设计、前端页面实现、后台接口支持、测试任 务等；PC管理端的任务开发也是如此，也细分为需求梳理、产品设计、前端页面实现、后台接 口支持、测试任务等，如果再细分功能模块，则可分为“群发消息”、“自动回复”、“用户管 理”、“消息管理”等功能模块的需求梳理、产品设计、前端页面实现、后台接口支持、测试任 务等； 这里需要注意的是：分解任务的过程中，需要将任务给描述清楚；否则团队成员会不太明确，自己究竟要做成什么样子，或达到什么样的目标才算任务完成。 项目的工作任务分解，其实也可以运用我们之前提到过的MECE原则去进行检查：工作任务必须全面、清晰、细分，任务责任需要到人，每一个子任务都能够估算工作量和工期。 ▍任务优先级安排 任务分配好了，但总有轻重缓急之分。项目里的优先级排序，就是需要产品经理去识别项目任务清单里的各种任务的相互关联和依赖关系，并根据自己对需求优先级的判断，来对项目里各项任务的先后顺序进行安排和确定。 通俗地来说，产品经理要定义的就是先做哪些任务，后做哪些任务。其实这个时候往往又会用到我们在需求管理中使用到的工具KANO模型，通过明确任务的重要度和紧急度来梳理任务的优先级，优先处理的是重要又紧急的任务。 在处理任务的优先级安排时，有另一个非常重要的点需要明白，那就是有些任务与任务之间，存在着前置后置关系，只有在完成了一项任务的时候，我们才能开始下一个任务。所以在规划优先级的时候，需要把这种情况给考虑进去。 ▍计划呈现——甘特图或其它 很多项目管理的书籍都推荐使用甘特图来进行项目进度计划的制作和呈现，一般都是通过微软的Project等专业软件进行绘制，还可以通过这些专业软件直接查看项目的关键路径。也有一些产品经理或项目经理直接使用Excel来制作项目进度计划表，毕竟他们对于表格的操作熟练程度已经足够驾驭一个项目的进度计划制作。 我是个比较注重用户体验的人，所以，上面两种工具其实我都不怎么使用；一般来说，我更喜欢通过团队协作软件中的项目管理功能，来实现项目计划的呈现。 比如下面这样的(tower的项目管理界面)： ▍风险控制 通俗地来说：风险就是发生不幸事件的概率。任何一个项目都有风险，这就好比任何一次手术都有风险一样，风险其实是无处不在的，是一种不以人的意志为转移，独立于人的意识之外而存在的事物。 我们先来看看常见的一些风险来源有哪些： a、客户没有参与项目 如果你们公司的一个项目恰好是给客户做的一个定制产品，但是在项目启动、计划和执行的阶段，都没有客户的参与，客户只是在最开始的时候给了一份文档，然后在项目收尾的时候来进行验收，中间没有丝毫地参与到项目中来。那么客户一旦发现最后的成果和自己当初设想的需求相去甚远，结果就会变得非常糟糕。客户有可能因此就不同意验收项目，要求项目团队重新返工开发，这个时候造成的工作量及时间的损失、及对相关事件的影响则是不可估量的。 b、需求不明确或不完整 产品经理的需求说明文档出现不明确或不完整的情况，项目出现风险的概率也会比较大，因为项目的开发成员都是围绕着需求设计文档来进行开发、测试的，如果产品经理能够随叫随到，和开发及时讨论清楚需求，则还能挽回一定的损失；而如果是异地开发，则整个项目便会比较悲催。 c、项目计划的不合理 项目没有如期完成，很有可能本身项目计划就是有问题的。比如说，团队成员的分工不合理、工期安排的也不合理（一般3个月才能完成的任务，非得要求1个月之内要上线）、资源没有配置到位、工作任务的分解没有细化没有责任到人（这样就会导致项目组的团队成员对自己的任务不太清晰，即使分解了，没有指定到人，也会发现影响项目进展）、还有一个就是任务的优先级安排的不合理，导致后面任务的完成受到影响等。 d、团队成员的精神状态 一个项目能不能如期按时按质地完成，其中最主要因素还是人的因素，因此团队成员的精神状态也是影响项目成败的风险之一。如果项目成员都如Scrum敏捷开发中提到的团队成员一样，都是自发组织和管理，参与项目的积极性比较高，项目风险就会大大降低。如果项目成员工作态度有问题，互相之间经常推诿任务责任，经常互相埋怨，那么项目的成果则很令人担忧。 e、领导变更 这里的领导变更，主要是指项目开发到中途，领导突然说这个需求不对，应该朝另一个需求方向开发，那么我们就称之为领导变更。这里的变更，大致分为两种情况： 一种是不太伤筋动骨的，也就是只是小的需求修改，不涉及底层架构的重建；另一种呢，则是产品的规划和定位不够清晰，导致修改起来比较伤筋动骨。一个需求方向的改变，就可能让开发重新搭建后台架构，前端很多页面也得跟着修改。 当然，有时候产品经理也常常会犯这样的错误，就是中途变更需求，这就要求产品经理在项目策划的时候就把需求都想清楚，尽量减少项目开发到一半需求突然变更的情况。 f、技术风险 这里说到的技术风险，指的是项目的开发组成员，他们在用代码实施项目的过程中，会发生一系列意想不到的情况。比如开发去做一个从来没有做过的功能，这个时候可能需要先进行技术调研，可能最后的结果是光光是调研事件就话费了一两个礼拜，留着开发的时间几乎仅剩无几。比如说网站挂了，一处理就一天时间进去了，原先手上的项目就只好拖延一天。 这里列举了一些常见的技术风险，产品经理们在做项目管理的过程中，还是稍微了解下比较好： 那说了这么多的风险来源，有没有什么比较好的方法来规避这些风险呢？ 答案是有，但是依然比较难规避掉所有的风险。 大家有没有同感：出现项目偏离日程安排的情况，很少是因为工作耗费了比预期更长的时间。更常见的原因是：根本不在计划中的工作使项目泥足深陷？如果身兼项目经理的你，深有同感；那么，我们就可以体会到：项目中的风险是可以互通的，昨天的问题就是今天的风险，你的问题很可能就是我的风险。 因此，我们能做的比较好的一个方法就是：在项目初期，对上述风险来源进行逐一参考和排查，看看是否存在什么问题。当然，更加隐秘的风险，恐怕也不是靠这种逐一排查的方法来发现的；更关键的点还是在于对日常项目状态的洞察，这样才能把所有的核心风险都呈现出来。 风险管理是一件非常耗费心力的事情，产品经理如果兼职做了项目管理的工作，就必须要做好相关的心理准备，毕竟内心强大也是产品经理必须具备的一个人格特质啊。 在完成了项目计划阶段，进行了项目计划的任务分解、优先级排序、计划呈现和风险控制之后，就到了项目的执行和监控阶段了。这个阶段主要是针对项目执行的情况进行沟通，对整个项目的执行进度进行监控，使其在时间、质量、成本之间取得一定的平衡。 项目执行和监控 主要来说，这个阶段会包含下面这么几件事情： 1、过程跟踪：主要是对项目执行过程中的跟踪和监控，防止团队成员对计划理解产生偏差，导致执行阶段出现一些问题，跟踪的事物包含团队成员、任务、开支情况等；2、例行项目会议：所谓的例行会议，其实就是要给一个项目制定一个固定的沟通渠道，这样才能让团队成员沟通效率变高；3、阶段性交付物的审核：对于一个长期的项目计划，一定是会拆解为好几个实施阶段的，那么对于阶段性的交付物就有必要进行审核了，这也是非常重要的一个监控手段；4、里程碑报告：项目达到了一个里程碑，那么就可以来一次里程碑的报告；5、变更管理：为了适应项目运行过程中与项目相关的各种因素的变化，保证项目目标的实现而对项目计划进行的一些调整，我们称之为变更管理； ▍第一件事情，过程跟踪 产品经理为了掌握项目的进展，掌握各项工作的状况，就不得不进行项目过程的一个监控和跟踪。只有这样，出现了问题，我们才能进行适当的资源调整和进度计划调整，重新规划某一个任务的开始时间和结束时间，并记录实际的进度情况。 那么，产品经理在实际的工作过程中，到底如何进行项目跟踪呢，主要可以从以下三个方面进行考虑： 1、管事——监控项目的任务 有很多产品经理都有一个习惯，那就是在每天来到公司的第一件事情，就是跑到项目开发组那边去溜达一圈，把大家召集到一个地方进行项目站立会的召开，例会花不了多长时间，但是在监控项目任务进展方面起的作用却很大。一方面可以避免有些同事在项目过程中沉浸在自己的世界里，方向走偏了自己没有发现。另外一方面是能帮助大家克服人性上的懒惰因素，在每天汇报工作进度中给大家形成适度的压力。 每日站立会在同样的时间和同样的地点召开，会议准时开始，最好不要超过15分钟，每一个开发团队的成员都必须发言，会议中不进行讨论，发言内容需提供以下信息： 昨天完成了什么 今天即将做什么 遇到了什么困难 很多团队在召开每日站会的时候，还会结合看板来进行任务梳理。 通过这样一种简单的会议形式，就可以让项目组的所有成员知晓各任务的最新进展。这样才能监控哪些任务的进度落后于计划，并采取相应的措施给予纠正（通常就是加班啦），尽量不使项目的进度受到影响。 当然，我们不光要知道任务的进度落后，还需要去了解落后的原因是什么，这样才能根据具体情况采取不同的措施来使得项目恢复到正常轨道上来。 比如，某一个任务的进度落后于计划，发现原来是任务分解的时候漏掉了这个任务或者这个任务没有责任到人，那么在发现了这一情况之后，可以采取的措施有：让开发加班搞定、增加人力投入、延长时间、或者更换效率较高的成员来完成任务。 这些都是补救措施，我们再补救完了之后，其实还可以进一步的思考，是不是我们的项目管理流程上面哪里有什么欠缺，是否可以改进工作流程、方法和工具，这样就减少上述情况的发生概率。 2、管人——监控项目的团队成员 大家不要误解为是让产品经理去做间谍之类的角色，混迹于项目组成员中偷取情报什么的。其实，这里所谓的监控项目的团队成员，更多的是去记录下项目组每个成员的表现，对表现突出的给予赞赏和肯定，对表现不好的则应提出相应的批评（当然，很多时候产品经理其实并不是开发部门的领导，措辞什么的还是注意一下为好）。 另外一点，产品经理要去多和项目组的成员进行沟通，这种沟通不仅仅是工作上的沟通，还可以聊聊生活方面的东西，这样不仅可以促进你和项目成员之间的关系，还能及时知晓他们的生活状态，也是有利于项目管理的。 3、管钱——监控项目的开支 一般的软件项目开发并不会涉及到项目开支的问题，因为基本所有的开支都是人力成本。但也有特殊情况，尤其是运营活动相关的项目管理，就经常会涉及到项目开支的问题，这里的监控其实主要是记录下所有的开支流水，看下与项目计划初始阶段的预算相比是否有超出的情况。 这个时候可以好好和运营的相关同事进行沟通，找出具体的费用超出项，分析原因找到相应的解决方案。 ▍第二件事情，例行项目会议 管理学大师彼得德鲁克有一句名言，叫做“管理就是沟通，沟通，再沟通”。事实上，我们细想一下，在项目管理的实践过程中，我们是不是经常会碰到下面这些情况： 比如说项目老板隔三差五就跑来询问项目的进展情况，其实是因为没有人给他汇报项目的进展，但老板又比较担心； 再比如说，你把需求的第一部分通过邮件发出去后，没有人回邮件提出自己的意见和疑问，你也以为这个需求会很顺利的走下去，但是那天无意间和团队成员聊起需求，那个成员马上提出来自己的异议，巴拉巴拉说了一通。有的时候你不去问，别人是不会主动来告诉你他的想法的，这个时候可能自己才意识到，其实是需要给团队一个沟通的机会来聊这些东西； 还有，在项目实践中，问题早就已经出现了，但是过了一段时间才通知项目团队的所有成员，这样就导致了大家对于项目进展的信息不对称，很容易导致工期滞后的情况发生； 所以，在项目管理的过程中，沟通是不能忽视的一个重要环节。再说的直白一点，项目负责人最重要的工作之一就是沟通，所要花费的时间可能要占到工作的75%～90%。因为只有良好的沟通，才能获取足够多的信息，才能发现潜在的问题，这样才能更好的控制项目的各个方面。 前面我们提到了项目有相关干系成员，但由于每个成员的岗位和职责不同，所以每个人关注的项目信息不一样，他们关注信息的频率其实也不一样，有的比较频繁，有的则可能整个项目过程就问那么两三次。由于每个人的习惯不同，所以他们获取信息的手段也不太一样，有些人喜欢微信、QQ，有些人喜欢邮件，还有些人喜欢以会议的形式获取信息。 这样的话，就很有必要建立起一套属于本项目的一个沟通机制，统一一下沟通的方法和渠道。比如说最紧急的事情可以通过电话沟通，比较紧紧的事情则通过微信或者QQ沟通，而不是那么重要的事情，则放在每日站会或者是项目周会的会议上进行解决。同时，还应该在团队里提倡主动沟通的精神，这样不仅能建立团队之间的亲密关系，更能表明成员参与者对项目的一个重视程度。 ▍第三件事情，阶段性交付物的审核 在项目进展的过程中，会产生不少的交付产物，产品经理在管理项目的过程中，可以对以下几项阶段性的交付物进行审核，以确保整体项目的计划和执行不会出现大的偏差： 1、需求清单 产品需求清单是一个排序的功能需求列表，是一个持续完善的清单，包含所有产品需要的东西，也是产品需求变动的唯一来源。产品需求清单包含所有的模块、功能、特性、需求描述、商业价值、优先级描述等。 需求清单的内容、可用性、优先级等仅由产品经理负责管理。 2、任务清单 任务清单是一份足够具体的计划，包含对需求清单的任务分解。开发团队在整个迭代过程中都会修改这份清单，比如开发团队对需求有了更多的了解，需要增加一些新的开发任务到清单中去。 任务清单的修改只能由项目经理（产品经理）负责，该列表是用来明确项目团队成员的任务的。 3、项目周报 项目周报是对项目组本周工作内容的总结、以及下周的工作计划安排的汇报，同时项目周报需要及时反馈本周工作中存在的问题以及需要领导协调的资源。 项目周报中切忌报喜不报忧，要反映项目的真实情况。 ▍第四件事情，里程碑报告 当项目进展到一个关键节点，这个时候出现了一个里程碑式的事件，里程碑代表项目生命周期中的重大事件，是衡量项目总体进展的一种高层次的方法，能用于向项目利害关系者和项目组报告高层次的进展情况。 另一个方面来说，在项目进展过程中，通过让项目组成员了解他们为实现里程碑付出的努力，而里程碑的实现对鼓团队成员也是非常有用的。 比如说，在每个迭代结束后，项目组成员聚在一起召开总结会议，回顾一下在本次迭代过程中，哪些是做的好的，哪些是做的不好的，找出潜在的可以改进的事项，作为将来的改进计划。迭代总结会议记录就是这样一份将会议过程记录下来的清单已经后续跟进的依据。 通常的里程碑事件有这么一些：需求分析、详细设计、系统开发、系统测试、正式发布等，产品经理在管理自己的项目时，可以根据自身项目的一些关键节点来做一下里程碑式的总结，达到项目汇报的目的。 犹如《西游记》中的唐僧取经团队，好不容易经历了九九八十一难，才来到了佛教圣地灵山取得真经。这就好比一个历经千辛万苦的项目管理过程，这种体会其实作为产品经理的你，也是有机会体验的。 项目收尾阶段在项目的整个发展过程当中，我们已经经历了项目的启动，项目的计划，项目的执行和监控，最后终于到了项目的收尾阶段，有那么一瞬间，你会觉得一切都是值得的，因为胜利就在眼前，希望的曙光仿佛在明日即将瞥见。 项目收尾阶段主要是对项目的各项指标进行评估验收，对项目进行经验教训总结。但，作为整个项目的负责人，即使到了最后一刻，我们依然不能掉以轻心，有很多例子就足以证明仔细、认真的重要性。 比如说，一个简单的服务器修改功能，由于过于轻视，没有走测试流程，直接发布到外网，导致外发版几万用户的手机崩溃。虽然后期排查查明是因为程序员的疏忽导致的参数错误，但其实这里就已经暴露了项目流程上还存在很多问题，尤其是在项目收尾的过程中，产品测试是非常重要的一个环节，没有经过测试的产品，是万万不能对外进行发布的，这都是血的经验教训。 嗯，重要的事情还真是的说上三遍吧： 无论进度多赶的项目，发布前，请一定内测。无论进度多赶的项目，发布前，请一定内测。无论进度多赶的项目，发布前，请一定内测。 那么，具体到项目收尾这个事情上，就涉及到方方面面的验收及检查了，项目团队的所有成员都理应投入到自我检查和项目检查的队伍中来，这样才能确保项目正常、稳定的上线。 ▍功能bug测试 测试是产品上线环节中重要的一部分，伴随着整个产品的生命周期，因此产品测试是很重要的一个环节，需要特殊的人员从事相关测试工作，这部分人就是测试工程师。目前所有的互联网公司都有测试工程师。 当然，根据项目的大小不同，测试团队的规模相差也很大。有些项目需要和开发团队人数相当的测试工程师，而有些团队的开发人员、产品经理则兼任了测试的职责。 在项目的发展过程中，应尽量对一些基础功能制作自动化测试工具，并不断完善测试用例。这样测试团队可以把更多精力投入到新功能的测试中，而不是每次版本发布都在对已有功能是否被破坏而感到担心。测试工程师是产品上线的最后一环，对用户负责，是“上帝”的品菜师，他们的定位是产品把关者。 通常，测试工程师在项目中的主要职责分以下几部分： 编写测试计划、规划详细的测试方案、编写测试用例；根据测试计划搭建和维护测试环境；执行测试工作，提交测试报告，包括编写用于测试的自动测试脚本，完整地记录测试结果，编写完整的测试报告等相关的技术文档；对测试中发现的问题进行详细分析和准确定位，与开发人员讨论缺陷解决方案；提出对产品的进一步改进的建议，对测试结果进行总结与统计分析，对测试进行跟踪，并提出反馈意见； 测试工程师完成了以上的相关任务后，才算是完成了项目的功能bug测试部分的收尾工作。 ▍开发人员的走查 尽管大部分的功能性bug都被测试人员发现，并反馈到开发人员这边进行处理和修改，但是开发人员仍然需要对一些自己的工作进行走查，这样才能提高整个产品的安全系数。 开发人员的走查，主要包含如下一些内容： 是否进行高危函数扫描？是否进行安全漏洞扫描？是否有内存泄漏的检测和结果（如果是C/C++代码）？不必要log是否删除了，以及log信息是否清晰完整详细？是否影响其他相关模块功能表现？自身系统压力是否已评估？后端支撑系统负载变化是否已评估？ 当然，这里只是列举了一些比较常见的开发走查，具体的开发走查安排还是要靠开发部门的领导来具体计划和推动安排。 ▍产品走查 产品经理作为整个项目的负责人或主导者，对于自己份内的工作也要做到仔细走查一遍，确定没有任何产品策划上的问题，才是对自己工作岗位职责的尽责，也是对项目的负责。 通常，产品经理在项目收尾阶段，需要检查如下事项： 需求清单是否有调整或更新？例如每个功能特性是否有确定的输入、处理、输出；需求文档是否补充完整或及时更新？例如交互图、设计稿是否已经更新；产品更新说明文档是否已经提交并进行客服培训；产品页面文案是否已检查（包括但不限于页面文字、广告语）；已有功能、标识的改动，在其他模块的呈现，是否覆盖完整？数据统计需求是否明确提出？数据是否正常上报？ 这些都是非常细节和琐碎的工作，产品经理在处理这些事情的时候，往往需要多一份耐心和细心，这样才能考虑周到和全面，确保在自己的工作范围内，没有给项目造成什么损失。 ▍交互和设计走查 这部分，主要是交互设计师和UI设计师要做的工作，因为即使是再精致的设计稿也只是设计师们电脑中的图片，只有经过了项目里的前端工程师、开发实现了的产品，才能被广大用户看到。 所以，在前端和后台开发完成后，设计师与开发人员一起确认的环节是必不可少的。不经过确认就上线的产品，往往在产品细节上会存在疏漏，比如说某几个页面样式的细节和原先的设计稿不符，这样就造成了产品用户体验的下降。 在这个环节，交互设计师通常要做的工作包含如下内容： 页面的交互动作，操作及其反馈；交互控件的各种状态，初始状态、常态、边界状态、错误状态等的情况确认；其他交互细节，如默认值是否正确、第一屏的高度、产品文案等； 而UI设计师要做的事情主要是对产品的视觉样式进行走查，如是否有色差、尺寸间距、图片质量、是否符合栅格等； ▍产品运营人员的走查 如果项目做好之后，就要投入到市场，那么产品运营人员肯定也要在产品上线之前做好相关的运营准备，这样才不至于沦落到产品推出之后无人问津的尴尬境地。 那么，通常来说，产品运营在这个环节需要做哪些工作呢？ 产品的冷启动是否已经准备完毕，种子用户的招募工作是否已经开启？内容运营是否已经规划？内容的更新机制是否已经确认，并进行部署，是自动更新，还是人工更新？活动运营是否已经规划？是否有专人负责？周期性的活动，是否已经配套有运营模板？用户运营是否已经规划？拉新、留存、促活的关键步骤都有哪些？新媒体运营的账号是否已经建立，是否有专人负责？渠道拓展是否已经规划？是否发展代理？是否要引入合作伙伴，合作伙伴的资质又应该是怎样的？ 总结 在看着产品成功发布上线后，项目团队总算是松了一口气，这个时候就是项目进行了成功地交付了。这个时候，产品经理可以总结一下整个项目的收获和成功经验，比如运用了任务优先级排序，才确保产品项目的主流程能够顺利按时上线。 在整个项目管理的过程当中，肯定也暴露了团队成员的不少问题，比如研发阶段，前松后紧，总是临近提测时，才匆匆收尾；这常常导致提测质量不佳，或者提测时间延后，风险积攒到测试阶段才集中爆发，最终导致项目延期发布，或者带着显性的Bug上线。 面临这方方面面的问题和陷阱，产品经理需要带领项目团队做好准备来迎接各种挑战。最关键的是能够构建一个学习型团队和高效沟通的团队，及时总结项目经验和教训，从而不重复犯同样的错误，团队在项目的发展中不断学习提高。 最后要做的，就是一些文档的归档和项目庆功，这些想必大家在日常的项目管理过程中都遇到过了，就不再复述多言。]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>产品经理</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[腾讯手机充值产品需求文档]]></title>
    <url>%2F2020%2F07%2F04%2FPRD%2Findex%2F</url>
    <content type="text"><![CDATA[本文包括腾讯手机充值产品需求文档，以及记录了如何撰写高颜值的产品需求文档。 如何写需求文档？需求文档是写给大家看的，表达团队最关注的内容；（给自己看、给团队看、给未来交接的人看） 需求文档的形式不拘，重点是增进协作、产生价值。 什么是需求文档？俗称：MRD、PRD、BRD等等，概念不重要； 效果：说明为什么干？怎么干？干了后有什么效果？ 内容：明确产品背景、需求、流程、原型、交互等内容； 谁看：PRD的阅读对象 - 设计、研发、测试。 需求文档有什么用？内部沟通：明确产品需求；明确产品要求和细节；让参与者明确实现的结果。 存档：有据可查；交接更容易，更职业；跟进者了解之前的做法和过程。 用什么工具写需求文档？Word：传统的PRD都是用Word的，如果大的项目，建议也用Word来写； Axure标注：直接用Axure写标注，小功能、初创团队的首选，团队配合融洽可以用这个。 高颜值的需求文档有什么特点？结构：逻辑清晰、层次分明 VS 没有标准过程； 背景：需求文档描述清楚 VS 一上来就讲功能和原型 流程图：业务流程、页面流程均有 VS 一上来就将原型 目标：考核指标、算法清楚 VS 没指标、凭感觉 习惯：变更过程清楚 VS 改来改去改回第一版 需求文档怎么写？1、项目背景与需求分析（表达足够来让研发理解是怎么回事儿？） 2、本次需求的目的及功能列表 3、流程与所处的产品模块关系 4、功能详细介绍 5、简要的用例介绍（有时需要） 6、考核指标与计算方法（研发关注上线效果如何？迭代还是下线？） 项目背景与需求分析谁提的需求？什么场景？遇到什么问题？ 简要描述分析过程：决策过程和依据是什么？解决方案是什么？（优先级排序） 有没有相关的背景数据资料？ 明确本次需求：用户、场景、需求、解决方案是什么？ 本次需求的目的及功能列表这个需求整体是什么样子的？是否要分阶段？ 本次需求做哪些？前后关系是什么？ 本次需求的功能清单有什么？ 涉及的功能或页面有什么？ 流程与所处的产品模块关系业务逻辑图 业务流程图 页面流程图 功能详细介绍交互设计图 原型图 简要的测试用例关键的用例是什么？ 重点关注点 错误提示表等 考核指标与计算方法本次需求要统计哪些指标？ 怎么计算的？ 怎么埋点的？ 腾讯手机充值产品需求文档]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>产品经理</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[针对腾讯手机充值业务“号码绑定标签”“礼品卡”功能点的调研报告]]></title>
    <url>%2F2020%2F07%2F03%2F%E5%8A%9F%E8%83%BD%E7%82%B9%E5%88%86%E6%9E%90%E6%8A%A5%E5%91%8A%2Findex%2F</url>
    <content type="text"><![CDATA[腾讯手机充值业务拟添加“充值号码绑定标签”功能和“礼品卡”功能，本文的目的是借助竞品功能点的分析提供一个依据，来判断是否添加这两个功能，以及对怎么做好这两个功能提出参考建议。 通过找到4款直接竞品（针对“号码绑定标签功能”）和3款具有“礼品卡”功能的竞品，对以上两个功能点进行对比研究的方式，此功能点调研报告重点说明上述两种功能点的体验流程，以及从功能差别提炼优缺点。 – 摘要]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>产品经理</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[互联网产品经理 - 学习笔记（二）]]></title>
    <url>%2F2020%2F07%2F02%2FPM_Learning2%2Findex%2F</url>
    <content type="text"><![CDATA[本文是我看视频 &amp; 系统学习《互联网产品经理课程》的笔记，旨在结构化地记录学习到的知识点，大体梳理产品经理相关知识框架，方便在未来的产品经理岗位工作过程中查缺补漏，快速定位到文中某处并针对某一方面内容深入学习后补充笔记。 —— 塑造理性岗位认知 一、概述1.1 走进产品经理岗位产品经理需要做好的3件事： 岗位 = 岗位职责 + 能力要求 + 团队角色 产品战略和发展规划 需求挖掘和分析 推动产品目标实现 1.2 场景剖析：产品经理的工作流程 1.3 内容详解：产品经理的工作内容通用工作内容：需求管理、产品文档、产品报告、项目管理。 需求管理池：采集需求、分析需求、筛选需求、整理需求。 产品文档PRD：设计产品功能、梳理业务流程、绘制产品原型、输出产品文档。 产品报告（产品&amp;竞品分析）：明确调研目的、体验目标产品、得出核心意见、撰写产品报告。 项目管理：项目启动、项目计划、项目执行与监控、项目收尾。（把控流程、协调合作、资源调配） 1.4 职位晋升：产品经理的发展路径产品助理：基础性工作、如整理反馈意见、整理需求、会议记录和数据统计等。 产品经理：从小功能入手，开始接手模块设计，最后能够负责完整的产品项目。 高级产品经理：同时负责多款产品或者一个重要的项目。 1.5 能力模型：产品经理必备的素质能力产品经理必备的素质要求：自我驱动：自我时间管理、自我情绪管理、自我学习管理。 情商：沟通技巧与换位思考。 好奇心：拥有好奇心，才能保证产品经理拥有对产品的敏锐力。 产品经理必备的能力要求：商业理解能力：对商业的理解、对市场供求关系的理解，延伸至对产品战略的理解。(坚持做不同行业的分析报告) 产品管理能力：可细分为产品定义能力、对产品设计开发流程运用能力、对产品开发中涉及人员的管理能力。 推动执行能力：一方面，按照优先级完成自己的工作；另一方面，推进关联其他人员的工作进度。 项目管理能力：结合调动资源，正确分配到各个任务上，并推动团队按照既定的项目计划按时完成任务。 二、产品经理必备四大思维2.1 什么是用户体验思维？用户体验是研究人在特定场景下的思维模式和行为模式，在提供产品或服务的完整流程中，使得用户能够以最小的成本来满足自己的需求。 从情感层面看用户体验： 愉悦惊喜：让用户感到愉悦、惊喜、感动。这取决于产品经理对产品的把控， 只有和用户”心有灵犀“，才能在产品设计中触动用户的情感。 人物合一：用户在产品上实现自我展现，获得了他人的赞同和认可， 进而用户在产品上找到了归属感和价值感，用户已经和产品已经完全黏到一起了， 即”人物合一“。 从产品层面看用户体验： 表现层：视觉信息是人类获取对实物第一印象的最重要因素； 对于产品来说，视觉特别丑，用户根本用不下去； 好产品本身就是艺术品。 行为层：产品的信息分类是否合理，内容是否充实，是否能满足用户的基本要求。 只有布局分类合理的信息框架和充实内容，加上协调一致的行为动作，三者协同才能实现产品的预期目标。 内容层：内容层就像是工程图纸。 产品经理轻视用户体验的表现就是，不重视信息架构，或者是忽视信息架构对具体内容的先导作用。 2.2 如何培养用户体验思维？尼尔森十大可用性原则： 2.3 什么是逻辑思维？逻辑思维主线程是因果关系的辨识过程，因和果之间建立互相支持的关系，由因到果。 只要能提升产品效果的逻辑，产品经理都应该去理解（算法、客户端通信机制、系统架构、搜索推荐等各种），并在此基础上优化。 四类产品逻辑解析（应在面试中表现出来的素质，平时要大量练习）: 基础产品逻辑: 指产品设计的一些基础逻辑，包括但不限于前端交互逻辑，信息展示逻辑，产品商业逻辑等 数理逻辑: 包括对于统计学有基础的了解，有基础的数据敏感性，拥有从数据层层深挖定位到问题的能力 思维逻辑: 在表述方案和评估方案的时候，能够有明确的逻辑思维 （评估方案时：事实充分？假设依据可靠？结论逻辑链条通顺？）（❎我觉得...） 业务逻辑: 产品是为公司业务服务的，产品经理掌握业务逻辑，才能设计出更优质的产品出来 （需掌握产品经历、了解对方业务） 2.4 如何培养逻辑思维？（《金字塔原理》）金字塔原理，是一种重点突出、逻辑清晰、主次分明的逻辑思路、表达方式和规范动作，可以从重点突出、逻辑清晰、主次分明、规范动作这四个关键词去理解它。 开篇布局的中心论点 分论点：纵向关系，指主题和子主题之间的关系 子论点：横向关系，指子主题之间的横向关系 用SCQA模型打磨序言 Situation情景：大家熟悉的情景、事实引入。先给到读者认同感，取得他的信任。 Comlication冲突：实际情况往往和我们的要求有冲突。在平顺取得信任后，制造起伏。 Question疑问：怎么办？如何解决问题，把握机遇，迎接挑战，化解冲突等。 Answer回答：解决方案是什么。这是你的终极主题，也是金字塔的塔尖。 结论先行： Answer回答：解决方案是什么。这是你的终极主题，也是金字塔的塔尖。 Situation情景：大家熟悉的情景、事实引入。先给到读者认同感，取得他的信任。 Comlication冲突：实际情况往往和我们的要求有冲突。在平顺取得信任后，制造起伏。 纵向关系把不同的思想抽象层次，沿着金字塔的顶端一层一层的往下分解，展现给别人。然后自上而下，中心思想，一级论点，二级论点…… 横向关系同一级别之间的逻辑关系，可以分为演绎关系和归纳关系。 演绎关系：从因到果，推理层层递进，推理的结论就是上一级的思想（分论点）。 归纳关系：自思想间有共性，上一层级思想是对子思想的概括总结。 用逻辑思维解决实际问题界定问题：不是找具体问题，而是规定问题所在的集合范围。（可采用连续分析法） 结构化分析问题：收集信息、描述结论、得出结论、提出方案。 分析和找到解决方案：寻找具有因果关系的要素、行为或任务，最后来得到结果，或者是给出具体的解决方案。 组成金字塔结构：用金字塔结构来展示整个逻辑思考的流程，用来和他人交流。 2.5 什么是数据思维？（用数据说话，而不是自己的主观判断）知识 &lt;- 信息 &lt;- 数据 所做的任何决策的知识都是建立在信息基础上的，而支撑信息的是数据；数据本身是没有任何价值的，有效的数据驱动可以将数据转化成信息，并且形成结构化的知识体系，这样才能指导实际工作。 &lt;- 决策 &lt;- 数据积累 &lt;- 数据分析 &lt;- 数据思维：所有做出的判断和结论都基于数据，对数据敏感，而且善于应用数据；对任何事情、任何看法要有数据作为依据，即用数据说话，而不凭借自己的主观判断。 把握数据链条来工作 数据思维其实是一根链条，透过眼前的东西，用力拉扯，把后面原本看不到的东西呈现出来。 产品经理在梳理业务时，用业务流程图来表明各个模块之间的关系，伴随着业务流产生的数据就是数据流，各个数据指标之间也存在先后和关联。 2.6 如何培养提升数据思维？建立“以数据为导向”思维习惯通过数据埋点，发现问题描述问题； 挖掘问题本质，明确产品的优化方向； 检测评估效果，复盘整个流程。 数据分析的4个步骤描述性分析 判断性分析 预测分析 指导性分析 可结合数据分析做竞品分析-以公众号竞品分析为例看数据思维描述性分析:账号定位、内容选题、发布频率等维度调研竞品账号 判断性分析：根据竞品公众号文章的阅读量、判断选题、用户偏好等 预测分析：根据描述性分析和判断性分析，通过数据，判断未来态势 指导性分析：给出指导性分析，如选题方向、发布频率等具体执行方案 补充内容：常用数据搜集网站：百度搜索数据、艾瑞数据、阿里数据、微信搜索指数等 相信数据前，要有勇气否定自己的经验或想法，时常关注数据，思考数据 产品经理，要多沟通，多获取别人的信息和数据，不要固执己见，再做决策 2.7 什么是业务思维？（做好功能、产品之后，比较后期的能力）功能 -&gt; 产品设计 -&gt; 业务功能：产品新人对产品的认知，源于其他产品的使用经验，一个普通用户的角度去感知； 产品设计：完成业务逻辑设计，规划模块信息架构和功能架构，从最开始的普通用户视角转变成设计视角； 业务：通过产品工具创造的用户价值和商业价值之间的关系，看中功能的逻辑完整和体完整。 业务思维是什么？（让公司创造经济价值）业务思维是一种统筹综合、全局思考、细节强化的思维方式； 业务思维是讲求目标和结果的，讲求投入产出比ROI和效率； 业务思维，是需要考虑产品背后所承载的业务闭环和商业价值。 2.8 如何培养业务思维？业务思维与非业务思维的区别业务思维用户需求是什么？ 市场发生了哪些变化？ 业务的目标是什么，现在的问题是什么？ 我的工作价值在业务的哪个环节得到体现？ 我的工作价值如何在业务中得到落地？ 非业务思维基于部分便利性考虑问题 认为做本岗位专业的事情，仅考虑做好自己这一段工作 从来不会考虑在业务中的落地等 了解公司的商业模式产品层面：了解用户价值、盈利模式和运营方式。用户价值：目标用户、用户需求。产品功能和竞争优势；在盈利模式：免费or付费、实体商品or虚拟商品？ 公司层面：了解公司的资源、客户和财务情况。公司资源：合作伙伴有哪些？有没有政府资源？业务资源有哪些？财务方面：公司成本结构是怎样的，收入来源有哪些，资本增值渠道有哪些等 提升业务思维的两种方式通过韦斯伯德留个盒子组织模型。全面了解一下公司及业务 了解公司的商业模式，包括两个方面：产品层面和公司层面 三、产品经理必备技能 - 需求篇3.1 如何做需求采集？产品是为了满足人的欲望很多所谓的需求就是人性中的欲望，而产品就是为了满足人的欲望这个目的所诞生的工具和产物。 需求采集的定义需求采集是获取/验证需求的方法。 它的目的是/深入了解分析目标客户，发现用户痛点。 需求采集步骤：确定采集目的：没有目的的采集是盲目的，不能直戳要害，找不到合适的数据或者是需求、因此，需求采集的第一步就是确定需求采集的目的、 选择采集方法：选择依据是看产品开发的阶段和调研目的。共有4种方法：用户访谈、可用性测试、调查问卷和数据分析。 制定采集计划：在选定采集方法之后，根据每项方法的步骤和注意事项去开展接下来的工作。 执行采集：根据制定的采集计划去执行，在执行过程中需要注意细节。 总结分析：将资料进行整理规划分析，从这些资料里寻找有价值的信息，规划接下来的方向。 3.2 常见需求采集方法需求采集的4种方法用户访谈： 准备阶段：明确访谈主题和目的，设计访谈提纲，提出开放式的问题。（标注用户信息：忠实度、性别年龄等） 现场访谈：给用户提供一个好的沟通氛围，尽量在访谈过程中获得更深层次的信息，并及时做好标记、 数据分析：过滤掉无效信息，提炼用户反馈的需求，最后汇总分析。 问卷调查： 准备环节：在明确调查目的后再做问卷，问卷需要做到封闭式问题、无忧岛用户、题目表述准确。尽量避免专业词汇等等 投放环节：根据调查目的，要选择合适的渠道投放问卷。触达目标人群，能够反馈回有用的信息。 需求分析：过滤掉不完整。无效问卷后统计调查结果，产出需求分析的结果，可以从用户、问题。行为和原因4个角度去分析。 可用性测试： 准备阶段：包括任务的设计，如测试的目的、参与的用户、测试的流程和环境等等，需要根据测试目的邀请代表性的用户。 实施环节：需要创造一个轻松地环境，避免给用户提示，在测试过程中要及时记录测试要点。 需求分析：分析测试用户是否为典型代表用户；分析用户遇到问题的操作和反馈，在测试后要访谈了解用户的感受和想法、 数据分析： 数据准备：确定需求分析的目的，想要的数据是哪些，想通过这些数据做什么事情，然后在进行数据买点做短期的测试。 数据收集：数据收集的过程中。要保证数据连续和完整，数据收集完成后。统计结果要尽可能的量化和图形化。 需求分析：分析前认定数据采集的正确性，通过数据对比发现具体的问题，根据用户数据和访谈结果来判断数据背后的原因。 3.3 需求采集的其他方法分析业务发展需求：产品根据业务发展需要去做功能（抖音快手的直播） 分析行业竞品：参考评估竞品产品，通过分析借鉴竞品需求 分析用户的评论反馈：产品内部评论反馈收集及应用商店评论监测 社区平台评论文章：如简书、知乎、豆瓣等社区评论文章 倾听公司内部的声音：参考老板及公司同事提出的需求 3.4 如何做需求分析需求分析的4个步骤 理解需求 需求定位 需求评估 需求分级 需求分析是为了需求更容易回到业务，同时分阶段进行升级迭代，形成整个产品的节奏。 理解需求理解需求有两个工作；需求描述和需求分类。 需求描述：重现需求场景，能帮助产品经理对需求进行解读；利于团队沟通，规范统一的需求描述能降低团队沟通成本。 需求分类：需求类别可划分为：功能类、数据类、运营类（电商平台做小游戏）、体验类（地图导航加VR）、设计类。 需求定位需求定位：从公司战略、产品定位、用户需求3个维度进行 公司战略：产品和需求的参考范围可以根据战略阶段来评估，战略阶段分为起步、发展、迭代三个阶段 产品定位：确定需求的性质，定义产品的功能 用户需求：绝大多数用户需求是需要转化的，转化方式主要有3种，分别是：提升现状、降低预期、转移需求。 需求评估需求评估，是评估需求实现的难度。 初次评估：只是大致的评估范围，通常可以找一个经验丰富的项目经理或者开发帮助做评估。 具体评估：后期方案确定，需要根据具体实现方式来具体评估。 需求分级需求可分为：重要又急需，不重要但急需，重要但不急需，不重要也不急需4个等级； 产品未上线：基本需求（产品核心） &gt; 期望需求 &gt; 兴奋需求（超出用户预期）来分配需求重要度； 产品已上线：重要性 = 功能使用用户百分比 * 使用次数百分比 * 类别重要性百分比，通过代数计算来确定产品的重要性； 优先做大量高频的需求，小量低频的需求后做。 3.5 需求管理：建立需求池需求池需求池，是不在本次开发版本范围内的所有需求。严格来说，即使是下一个开发版本的需求，也可以算作是需求池的范围； 需求池是一个产品迭代依据的库； 建立需求池的好处；一是便于产品版本迭代有据可依；二是方便团队之间的合作沟通。 （不标注需求优先级会失去开展工作的方向感失去重心；没有理清需求之间的先后顺序；没有做好版本规划。 并非所有需求都要放进需求池，一些需求要经过筛选和评估；并非需求池里的所有需求都要落地。 需求录入到需求池时，要遵循”有进有出，宽进严出“原则。 需求池里具体内容序号；需求名称；需求类型；需求描述；需求来源；预期效果；优先级；状态；添加时间；提交人 定义需求优先级的7种方法1.KANO模型法 基本型需求 期望型需求 兴奋型需求 2.矩阵分析法 重要且紧急 重要不紧急 紧急不重要 不重要也不紧急 3.经济收益法 经济收益高且紧迫 经济收益高且不紧迫 紧迫但经济收益不高的功能需求 不紧迫且经济收益不高的功能需求 4.前/后置需求分析法 前置需求的优先级 &gt; 后只需求的优先级 前置需求的重要性和紧迫性 &gt; 后置需求的重要性和紧迫性 5.满足核心用户需求的优先 核心目标用户的需求永远是放在第一位的，非核心的边缘用户的需求在分析的时候很顺其自然往后排。 6.满足核心业务的需求优先 在排需求优先级时，我们就会把核心业务需求排在靠前，把其他非核心业务的需求排得比较靠后。 7.满足核心业务投入产出比最大的需求优先ROI 在所有能满足核心业务的需求里面，找到ROI最大的需求优先开发。 花最少的时间、最少的资源、最少的预算开发完功能，尽可能快地赶在时间窗口，获取最多的用户，赚最多的钱。 3.6 什么是产品需求文档目的是将产品的思维和逻辑通过文档的形式表达出来。 BRD主要是面向领导，是为了展现产品价值以获得更多资金人员等资源支持的； MRD是面向产品相关的所有部门和人员的，是在BRD的基础上更详细地阐述产品相关的细节与市场价值之间的联系，并周知先关人员，收集建议也获得相关支持； PRD是面向技术人员，包括项目经理、技术经理和前端、后台、数据等开发人员的，目的是为了落地产品，将功能点具象化呈现给技术人员。（产品经理和技术之间的桥梁） PRD内容详解文档信息：包含文档与撰写人的相关信息，包含但不限于文档名称、文档版本、撰写人信息（手机、邮箱、部门等）、文档修改记录等； 需求总览：一般可用需求表格形式展现，内容包含但不限于需求分类、需求简单说明、优先级、技术对于需求的分解、排期等； 具体的需求说明：需要根据需求的类型进行定制化的说明，一般可能包含页面说明、交互说明、数据来源说明等方面。页面说明主要阐述页面包含的元素和模块，以及各模块分别满足的需求。 3.7 产品需求文档的写作方法好的需求文档有哪些特点？结构：需求文档结构化，主要是显得逻辑清晰，层次分明。 背景：在需求文档里，要将需求背景描述清楚。 流程图：业务流程图、页面流程图。顺序是先讲业务流程，再讲页面流程，最后讲原型。 目标：目标明确，考核指标和算法非常清晰；（我上这个需求，最后统计的指标是什么？这个指标是怎么算出来的？） 习惯：需求文档里呈现需求变更记录。 产品需求文档撰写4步骤 写前准备，罗列产品功能 梳理需求，产出页面流程图和业务逻辑图 原型设计，将结构化的需求进行框架化 实操环节，动手撰写PRD 写前准备，罗列产品功能罗列出产品功能的信息内容，将想法逐渐清晰，帮助接下来规划功能的辅助信息，同时也可以辅助服务端技术人员创建数据库。 罗列信息，可以用文本形式，也可以用思维导图，主要目的是清晰易懂。 梳理需求规整产品需求，让想法更加结构化；首先罗列出产品频道及页面，其次基于产品结构图梳理出频道及页面中的功能，并延伸构建出用户的操作流程。 原型设计原型设计是将结构化的需求进行框架化，因此原型也被称为线框图； 相对于抽象的文字描述，原型则更加清晰产品的需求，设计和技术人员或者老板也能够更加直观的了解到产品意图。 实操环节，动手撰写PRD常规的PRD文档的四个组成部分：结构图、全局说明、频道功能、效果图。 结构图：一个是信息结构图，第二是产品结构图。 全局说明：主要讲解产品的全局性功能的说明。 频道功能：以频道为单位，页面为子项，分别描述产品的频道、页面及页面模块元素的功能需求。 效果图：有设计师完成的产品图，和实际开发完成的产品保真度一致。 四、产品经理必备技能 - 原型设计篇4.1 功能设计与功能结构图一是基于功能点做优化迭代； 二是做一些新增完整的功能点设计； 产品都是由小功能区构成的产品经理不是功能经理，但是好的产品经理一定能做功能； 产品早期以功能为主的，产品后期主要是对原有功能的迭代； 完整的功能是功能评审之后提交给研发的； 功能结构图功能结构图就是按照功能的从属关系画成的图标，在该图表中的每一个框都称为一个功能模块； 通俗来讲，功能结构图就是以功能模块为类别，介绍模块下其各功能组成的图表。 功能结构图的作用产品概念设计的运用工具之一，在绘制的工程中，能够帮助产品经理思考并清洗产品的功能模块及其功能组成； 梳理需求，以鸟瞰的方式对整个产品页面中的功能结构形成直观认识，防止在产品需求转化为功能需求的过程中出现功能模块和功能点缺失的现象。 信息结构图 &amp; 产品结构图信息结构图：是指脱离产品的实际页面，将产品的数据抽象出来，组合分类的图标。 产品结构图：是一种将产品的原型以结构化的方式展示出来的图表，综合展示产品信息和功能逻辑。 4.2 功能设计：将需求转化为功能列表从功能设计到功能列表功能设计：需要将信息架构落地，是从框架结构到详细设计的过程。以分析后的需求为依据，在概念的基础上，设计产品的功能，经过功能的成本核算后，再进行产品设计； 功能列表：主要是确定产品的功能列表，在做需求分析的时候，做加法和减法的核心思考是保证产品的核心主线功能，功能设计阶段出来的功能列表更细化，甚至是到任务。 功能列表需要注意的3件事：第一是要对功能列表进行分类。分类可能无助于降低产品使用的难度，降低用户的认知和学习成本，让用户更容易接受。 第二是要坚持围绕功能框架来设计功能列表。概念设计阶段确定的功能框架，实际上就是产品整体功能的核心组成部分，在此基础上去细化功能列表，也不要迎合任何人吗，功能加多了并不是什么好事。 第三是想清楚再确认加入列表。任何一个功能点，只要还没有想清楚，宁愿先不做。不要为了功能的丰满度，刻意加上一些待确认的功能点。 4.3 功能设计前的注意事项是否值得做这个功能，可以从两个层面来考量；一是需求程度；二是使用频率； 确定功能分类，常见的功能可以分为四种；基础功能、亮点功能、发展功能、非需求功能。 需要思考的一件事情是删减功能，在最开始设计功能的时候可以天马行空的想，最后敲定的时候一定要尽量减少功能。 功能快速“模仿”导致的尴尬功能涉及面较广，且与原有功能逻辑存在互斥； 功能上线后反应不佳，如果竞品没有更新，也没有优化思路； 竞品突然把功能拿掉了，你该怎么办？ 针对功能展开逐级思考战略层 为什么要做这个功能？原始场景是什么？ 功能解决的问题是否符合业务主线，问题等级高嘛？ 当前效果与最初设计初衷是否有差异？变化的原因是什么？ 范围层 竞品中相同功能设计如何？ 如果是初创产品，是否符合MVP？能舍弃嘛？ 如果是成熟产品，是否有做数据埋点。当前使用情况如何？用户反馈如何？ 结构层 功能初在整个流程的哪个步骤，起到的作用是什么？ 功能与整个流程的关联耦合度有多高？去掉会怎么样？ 功能中的流程是否足够精简，各节点是不是绝对必要？ 架构层和表现层 功能能进一步拆解为多个功能么？功能步骤与有冗余感嘛？操作流畅嘛？ 功能操作流程是否足够合理？是否有抢眼的视觉内容扰乱了正确引导？ 4.4 认识流程图漏掉流程图直接去做原型图会漏掉很多逻辑。 认识流程图流程：特定主体为了满足特定需求而进行的有特有关系的一系列操作过程； 图：把流程进行一个书面化的处理，是一种呈现方式； 流程图：输入-输出图，是一种沟通性质的图形化语言。 流程图三要素 流程图的分类流程图分为两种：业务流程图和页面流程图 业务流程图，分为用户操作行为流程图和“泳道图”。 4.5 如何确定产品的流程产品的核心功能流程所谓产品的核心功能流程就是一个产品对用户产生的价值，用户为了获得这个价值要完成的简单的操作步骤。微博对用户的价值：碎片化浏览资讯和碎片化地发表自己的动态信息。如果用户想要从产品获得上述价值，就必然做出下述的操作流程和步骤：（价值-动作） 微博用户的核心操作路径： 梳理产品功能的操作流程业务调研 梳理与呈现 评审与确认 业务调研调研的过程注意的要素：who、what、why、how、where 调研时： 第一步建立一个全局观，了解业务的整体运行逻辑； 第二步依赖于问题的质量以及问问题的场景； 第三步是为了在观察中再进行验证。 梳理与呈现明确梳理业务流程的范围，具体是：包含哪几个功能模块，涉及哪些用户角色，使用关键节点做主干流程图； 对上面流程图进行分解，层层分解下去，直到不能分解； 最后绘制流程图，通常来说，会有三种结构的流程图出现，分别是顺序结构、选择结构、循环结构。 评审与确认一份流程图能否通过评审，关键是要看，它能否真正反映现实中的业务。好的流程图具备以下特点： 清晰易懂：整个流程图结构清晰，让浏览流程图的人一眼便能看懂主题流程 简单明了：流程图存在本身的意义就是为了将复杂的东西简单化 完整准确：梳理流程图的过程，是一个查缺补漏的过程 4.6 流程图的分类及常用绘制工具流程图分类1.业务流程图 它主要分为三方面：涉及到哪些主体？每个主体都有哪些任务？各个主体之间是怎么联系的？ 2.任务流程图 它一般是从战略上分析整个业务流程，让你对公司所做的业务有个大概的了解，而任务流程图就是在你的产品操作上，用户通过什么样的操作来完成它的目标。 3.页面流程图 页面流程图描述完成一个任务需要经过哪些步骤，画图时需要清晰的表现出用户点击页面的什么地方，然后跳转到那个页面。 常用的绘制流程图的工具ProcessOn Axure Visio 4.7 原型设计及常用工具什么是原型和设计原型：用线条、图形描绘出的产品框架，也被称为线框图。 设计：是综合考虑产品目标、功能需求场景、用户体验等要素，对产品的各板块、界面和元素进行的合理性排序过程。 “idea - 需求采集 - 功能结构 - 原型设计 - 产品需求文档 - 交付” 原型设计的作用1.因为原型是需求和功能的具象化表达，所以原型可以辅助产品经理与领导、交互、UI和技术的沟通产品思路。 2.因为原型相较于UI搞来说修改更方便，所以原型能提高产品经理的功能设计没通过评审时返工的工作效率。 原型设计种类及工具1.手绘原型 2.工具原型 4.8 原型设计：系统画原型系统画原型的三大步骤明确需求 清晰入口 设计原型 原型设计的步骤从步骤到页面，从元素到控件，进行后续设计 第一步是从步骤到页面 第二步是从元素到控件 第三步是进行后续设计 4.9 原型设计注意事项画原型图前首先是在画原型之前，先拟好流程和信息结构。 1.拿到功能后，先要理解功能，理解用户在用这个功能时会是怎么操作的，用户之间的关系有时怎么样的。 2.下游方向才有框架，有了框架才能填入内容，有了内容才能不断进行更细致的调整和修改。 3.框架和内容就相当于流程图和信息结构，具体的流程图和信息结构可以用脑图和Story完成。 画原型图时 面框架要清楚 明确内容板块划分 明确模块页面的承接关系 页面不影响设计师的视觉 页面元素统一、排版整齐 善用软件辅助功能，注意注释 画原型图后在原型图设计完后，需要对其进行修改和检查 首先要检查你的页面设计是否重点突出 其次检查你要实现的功能，是否在页面中突显出来 最后把设计的原型按照你的思路走一遍 五、产品经理的必备技能 - 产品分析报告篇5.1 产品分析报告产品分析报告常见误区不求方法，盲目写写写； 结构老套，没有价值； 分析浅层，结构散乱，没有结论。 认识产品分析报告明确分析重点：重点分析行业的产品模式/分析功能/交互，确定目的后，要往目的这个方向突出重点。 抓住分析核心：分析核心在于产品的“战略层”，即用户构成、核心用户、核心需求与解决方案、核心竞争力、市场上下游、盈利模式。 把握目标方向：如果要分析具体的页面、功能、信息架构这些细节内容，需要从宏观的产品目标中推导出来，不能脱离产品目标方向而分析； 关注挖掘数据：尝试从产品中挖掘一些数据，要从数据中得出结论； 抓住版本迭代：版本迭代代表着产品方向的演变和产品生命周期。 5.2 如何撰写产品分析报告产品分析报告4要素产品概览 行业分析 产品体验 &amp; 分析 反思/建议/总结 产品概览产品概览:即介绍清楚分析产品的基本信息,包括产品定义、用户画像、使用场景这3个方面的内容； 产品定义:用一句话简洁清晰地介绍产品； 用户画像:描述该产品针对的用户年龄/所处地区/职业分布/性别分布,辅以数据支撑,归纳目标用户类型； 使用场景:产品基础使用场景和相关的使用需求,即用户什么时候用和用来做什么? 行业分析行业分析:是将该产品置于所处行业/领域中,增加全面了解,包括4个方面的内容,分别是:行业现状、产品位置、主要竟品和行业发展情况； 行业现状:产品所处行业的市场规模,行业的发展历程和主要商业模式/盈利情况； 产品位置:这个产品在整体行业内的所处位置，如排名/市场份额占比/用户量占比等； 行业发展情况:关注行业目前的增长态势/发展空间/方向转变/未来是否有受政策、资本等因紊影响的风险与机遇等等。 产品体验 &amp; 分析基础信息:针对特定版本,需要标明体验环境、手机系统、产品当前版本号等等； 发展路径:对上线以来的重大迭代版本进行复盘分析；产品功能结构图/用户使用路径图； 功能分析:将绘制功能结构图/使用路径图的实际体验与产品定位结合,提炼核心功能详细分析； 运营举措:选取特定角度及线索来对产品的运营方式进行分析； 用户意见:应用市场或者社交平台观察用户评论,挑选重点评论/意见/建议作归纳。 反思 / 建议 / 总结如果我来这个产品,接下来要怎么做?有没有需要改进的地方? 该产品是否有明确的亮点/短板,或成功/失败原因? 针对该产品,是否有(较为成熟的)发展建议? 针对该产品未来发展方向,是否有预测? 5.3 产品竞品分析报告产品竞品分析报告常见问题没有明确的撰写目的 没有清晰的撰写规划 没有长期进行竞品分析工作的意识 问题1:没有明确的撰写目的产品竞品分析报告撰写目的： 分析需求（竞品的需求情况：具体到模块、功能、交互、界面和内容） 分析行业（市场表现、市场份额、最新政策、最新风口、行业动向、竞品动态、技术动向） 分析对手（发现竞品产品的需求点、创新点、问题点，竞品有我们没有、竞品强我们弱的东西） 给面试官看：行业动向、针对竞品的创新点、问题敏锐力和思考、重点突出你对产品的敏锐判断力 问题2:没有清晰的撰写规划明确竞品分析目的后,对竞品分析做规划和拆解，结合产品现状，思考应该从哪里去获取研究这些点需要的数据。 在写竞品分析报告时要有清晰的撰写规划,并按照这个规划有序进行下去。 问题3:没有长期进行竞品分析意识想更精准分析竞品的内在逻辑和问题点,吃透和竞品之间的差距,就必须建立长期观察竞品产品动向的信念 竞品分析需要不断重复,持续跟进才有更好的效果;可以为每个竞品建立一个追踪表,及时记录关键数据 5.4 撰写产品竞品分析报告产品竞品分析撰写步骤确定分析目的 选择竞品 撰写分析报告内容 总结 确定分析目的明确分析的目的,根据目的排列分析点 大而全和窄而深是两码事 明确目的就是聚焦重点 选择竞品竞品可分为直接竞争者、间接竞争者、潜在竞争者等等 在竞品选择之前，需要划分出选择竞品的标准，找到自己产品的位置，就竞品的标准对现有市面上现有的产品进行梳理，确定相应的竞品 撰写分析报告内容市场地位（市场份额、下载量、用户数量 -&gt; 产品在当前行业中处于什么位置 -&gt; 和标杆产品之间的差距；用户怎么看待我们的产品；大瑞网、易观智库、企鹅智库、百度指数、友盟数据找数据支撑） 功能特色（重点在期望型功能和兴奋型功能） 产品背景（产品背书很重要，背后资源雄厚） 构架交互 商业模式（非单纯盈利模式，还包括业务模式、渠道模式、用户模式；商业价值与用户体验之间找到合适的平衡点；2C会员付费、增值服务、虚拟道具、周边产品；2B广告费用、开放数据、API） 运营策略（竞品运营策略、运营活动） 战略定位 发展动向（需求尚未得到满足、新的功能可添加） 总结产品竞品分析报告一定要有产出，即竞品分析报告是就什么问题进行分析的，无论是验证推测，还是得到结论，最后都要有总结部分 总结必须要有理有据，用论据来支撑自己的观点，避免掺杂太多的主观因素 5.5 产品竞品分析与产品体验分析的区别概念产品竞品分析：对竞争对手的产品进行比较分析的过程，一种带有主观性的横向分析过程；通过对多个产品的整体架构、功能、商业模式、产品策略等多维度的横向对比分析，从而获得目的性的结论。 产品体验分析：是一个纵向剖析产品的分析过程。通过深度使用某款产品后，对产品解决的用户需求、目标用户特征以及提供的产品功能、交互体验、用户体验等从战略层，到框架层再到表现层进行有层次的剖析。 分析目的：产品竞品分析：具有战略性和策略性，为了验证想法、制定产品策略、探究商业模式等目的出发；产品体验分析，是为了挖掘产品缺陷，想提升自身产品的体验度; 分析数量：竞品分析往往需要分析多个产品，产品体验分析则是分析单一产品; 分析方法：竞品分析多采用对比研究的方法，产品体验分析多采用用户体验五要素的分析方法; 分析方向：竞品分析时分析维度或关键点的横向对比分析，而产品体验分析的分析方向更偏纵向的深度分析; 分析报告受众：竞品分析的受众，通常是老板、产品总监或者指定产品策略的人;而产品体验分析的受众，主要是产品团队，也就是产品、设计、研发、运营这帮人。 分析的完整性：二者均有客观分析和主观判断；竞品分析一般是围绕分析目的和分析维度进行重点分析，分析内容一般小而精，很难面面俱到；而产品体验报告一般会从产品的战略层、范围层、结构层、框架层、表现层对产品进行全面分析 产品竞品分析撰写步骤swot分析法 信息对比法 十字交叉法 5W1H]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>产品经理</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[互联网产品经理 - 学习笔记（一）]]></title>
    <url>%2F2020%2F07%2F01%2FPM_Learning%2Findex%2F</url>
    <content type="text"><![CDATA[初识互联网产品经理：本文通过介绍产品经理的前世今生等来让产品小白认识产品经理岗位，并帮助他们建立起对于互联网行业 &amp; PM职业规划的初步认识。 “产品经理的职责是确保团队能交出伟大的作品。” —— 引自《Cracking the PM Interview》 一、认识产品经理岗位1、产品经理的前世今生世界上第一位产品经理-宝洁: 同公司两款产品的市场定位、销售方式、价格等相似并由同一个人负责 一个品牌应由一个人负责 品牌经理 品牌管理系统 产品经理 传统行业 PK 互联网行业 实物产品 --- 互联网产品 市场成熟、同质化严重 --- 市场新、变化快 创新难度大 --- 创新机会多 （B站产品形态创新：视频+弹幕文化） 注：同质化是指同一大类中不同品牌的商品在性能、外观甚至营销手段上相互模仿，以至逐渐趋同的现象，在商品同质化基础上的市场竞争行为称为“同质化竞争”可指某个领域存在类型、制作手段、制作流程、传递内容大致相同的各类信息的现象。 2、产品经理的工作价值不断把握变化中的市场需求，寻找机会协同团队创造出优秀、伟大的产品： 外部价值：面向市场 --&gt; 把握需求、寻找机会 内部价值：面向团队 --&gt; 组织团队、高效协作 举例：在2020年全球经济受新冠疫情影响的背景下，很多企业无法按照计划恢复现场办公，随即产生大量线上办公需求，钉钉在年后上线千人大群、多方视频会议、在线直播等功能，这样的效率和速度也成就了钉钉今年里程碑式的增长。 二、了解产品经理的工作内容从需求到迭代 产品的生长之路 市场分析：分析市场供动态、趋势 具化需求：鉴别伪需求、锁定真需求 （场景分析用户痛点 产品设计：满足需求、重视体验 产品研发/生产：组织合作、管理进度 产品运营：用户增长、商业化 产品迭代：结合市场表现、持续优化 三、成为产品经理，你将……1、产品经理的一天 1000 梳理todolist 1030 新品PRD收尾 1200 关注产品使用数据 1230 午餐 1330 新功能介绍材料 1530 新品需求讨论会 1900 晚餐 1930 产品体验与学习 2000 工作总结 2030 下班？ 2、岗位的晋升与薪资福利 产品专员/助理 --&gt; 0~1年、8~15k 产品经理 --&gt; 1~3年、15~20k 高级/资深产品经理 --&gt; 3~5年、20~30k 产品总监 --&gt; 5年+、30k+ 3、产品经理的未来 什么职业是未来创业做CEO最好的“预科”？我的答案是：产品经理， 因为产品经理扮演着产品、技术、市场、客户、运营、设计中的核心角色。 --- 李开复 不断提升产品思维： 用户思维 逻辑思维 数据思维 业务思维 不断提升产品能力： 业务能力 需求洞察 统筹规划 协调沟通 持续学习、持续迭代、持续创新将伴随着你成为产品经理的每一天！ 四、如何斩获名企产品经理的offer1、产品经理岗位名企解读 百度 阿里 腾讯 字节跳动 京东 美团大众点评 拼多多 携程 饿了么 小红书 大疆 华为 滴滴 小米 爱奇艺 新浪 网易有道 搜狐 高德 搜狗 知乎 ... 2、企业招聘流程与招聘要求解析综合素质： 沟通能力 逻辑思维 团队合作 创新精神 热爱产品 学习能力 积极主动 工作技能： 需求文档 交互设计 数据分析 产品运营 原型制作 软件使用 3、产品经理求职备战建议校招求职前 VS 社招求职前： 高含金量、高相关度的实习经历 -- &gt; 系统梳理知识、技能与经验体系 学习项目管理、原型设计等方面的知识和技能 -- &gt; 准备作品资料、提炼成功经验 多用、多思考、多产出、持续积累 校招求职中 VS 校招求职中： 简历撰写：规范、充实、专业 -- &gt; 技能 笔试网测：熟悉题型、充分准备 -- &gt; 经验 群面/HR面试：模拟练习、不断提升 -- &gt; 能力 专业面试/总监面试：平时积累、多刷面经 -- &gt; 思维]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>产品经理</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[通过制作产品原型学会熟练使用Axure]]></title>
    <url>%2F2020%2F06%2F20%2FAxure_wechat%2Findex%2F</url>
    <content type="text"><![CDATA[本文记录学习使用Axure制作wechat产品原型，并记录在学习过程中的避坑指南以及实用tips。可在Github上下载.rp文件查看原型，链接地址为https://github.com/lumos0314/Axure_wechat —— 前言 制作流程 导入页面素材 模拟页面 事件演示、创作等 导入页面素材可先用手机打开app，并将主要界面进行截图；之后导入电脑，通过Axure的插入、图片选项选择要导入的图片（也可直接将图片拖入Axure页面），由于图片过大。Axure会弹出窗口提示优化图片，点击确定后完成导入。随后，在Axure页面栏创建页面和文件夹，拖动页面到页面或文件夹可形成附属关系。建议创建页面和文件夹如下，导入素材图片可全部放入素材页面： tips：可将画布背景设置为灰色，方便确定页面的边界。 模拟页面在模拟页面的过程中，先将图片从素材库中拖动到页面文件夹中对应的页面中，并以此为参照制作页面。选择元件裤中的box、horizontal line即可完成页面制作的基本操作，注意在Axure页面右侧进行相应的样式设置，对于“位置和大小”选项卡，按🔐可以固定长款比例，很适用页面大小的调整。 在具体的图片或box或line设置过程中，可通过给纯黑色的box设置50%的透明度达到遮罩效果，可设置圆角半径使得矩形不那么棱角分明，可用吸盘吸取颜色使得模拟页面的背景颜色更逼真原始背景色。 点击左侧、上方标尺并分别向右侧、下方拖动，可建立“标尺坐标系”帮助定位。 tips：可以将一些box、文字进行group操作组合在一起，再将组合好的整体复制，达到几个对话框叠加效果，整洁且方便。 tips：字体的设置方面，因为字体库的缘故，和原始页面的字体有出入是正常情况。另外，一些图标的素材可以在Iconfont阿里巴巴矢量图标库下载https://www.iconfont.cn/ 事件演示、创作等主要用到元件库中的Hot Spot功能：Use hot spots when you want to add an interaction to a paticular area of your design, frequently a particular area of an image that you want to make clickable. Note: This widget is not visible when viewing your prototypes in the web browser. 一些频繁用到的Hot Spot可以在每个页面复制，但要注意把每个页面在画布中的位置固定，比如(x,y)为(400,0)、]]></content>
      <categories>
        <category>产品经理</category>
      </categories>
      <tags>
        <tag>Axure</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用Excel&Python做基本的数据处理]]></title>
    <url>%2F2020%2F06%2F02%2FExcel%26Python%2Findex%2F</url>
    <content type="text"><![CDATA[本文记录如何使用Excel+Python实现数据的读取、生成、计算、修改、统计、抽样、查找、可视化、存储等数据处理中的20个常用操作。(从早起Python公众号学习) —— 前言 数据读取说明：读取本地Excel数据 Excel Excel读取本地数据需要打开目标文件夹选中该文件并打开 Pandas Pandas支持读取本地Excel、txt文件，也支持从网页直接读取表格数据，只用一行代码即可，例如读取上述本地Excel数据可以使用:pd.read_excel(“示例数据.xlsx”) 数据生成说明：生成指定格式/数量的数据 Excel 以生成10*2的0—1均匀分布随机数矩阵为例，在Excel中需要使用rand()函数生成随机数，并手动拉取指定范围 Pandas 在Pandas中可以结合NumPy生成由指定随机数(均匀分布、正态分布等)生成的矩阵，例如同样生成10*2的0—1均匀分布随机数矩阵为，使用一行代码即可：pd.DataFrame(np.random.rand(10,2)) 数据存储说明：将表格中的数据存储至本地 Excel 在Excel中需要点击保存并设置格式/文件名 Pandas 在Pandas中可以使用pd.to_excel(“filename.xlsx”)来将当前工作表格保存至当前目录下，当然也可以使用to_csv保存为csv等其他格式，也可以使用绝对路径来指定保存位置 数据筛选说明：按照指定要求筛选数据 Excel 使用我们之前的示例数据，在Excel中筛选出薪资大于8000的数据步骤如下：「选中一列 - 数据 - 筛选 - 大于 - 8000」 Pandas 在Pandas中，可直接对数据框进行条件筛选，例如同样进行单个条件(薪资大于5000)的筛选可以使用df[df[‘薪资水平’]&gt;5000]，如果使用多个条件的筛选只需要使用&amp;(并)与|(或)操作符实现 数据插入说明：在指定位置插入指定数据 Excel 在Excel中我们可以将光标放在指定位置并右键增加一行/列，当然也可以在添加时对数据进行一些计算，比如我们就可以使用IF函数(=IF(G2&gt;10000,”高”,”低”))，将薪资大于10000的设为高，低于10000的设为低，添加一列在最后 Pandas 在pandas中，如果不借助自定义函数的话，我们可以使用cut方法来实现同样操作 数据删除说明：删除指定行/列/单元格 Excel 在Excel删除数据十分简单，找到需要删除的数据右键删除即可，比如删除刚刚生成的最后一列 Pandas 在pandas中删除数据也很简单，比如删除最后一列使用del df[‘new_col’]即可 数据排序说明：按照指定要求对数据排序 Excel 在Excel中可以点击排序按钮进行排序，例如将示例数据按照薪资从高到低进行排序可以按照下面的步骤进行 Pandas 在pandas中可以使用sort_values进行排序，使用ascending来控制升降序，例如将示例数据按照薪资从高到低进行排序可以使用df.sort_values(“薪资水平”,ascending=False,inplace=True) 缺失值处理说明：对缺失值(空值)按照指定要求处理 Excel 在Excel中可以按照查找—&gt;定位条件—&gt;空值来快速定位数据中的空值，接着可以自己定义缺失值的填充方式，比如将缺失值用上一个数据进行填充「选中一列 - 编辑 - 查找 - 查找内容 - 搜索（按列） - 查找范围 - 值」 Pandas 在pandas中可以使用data.isnull().sum()来检查缺失值，之后可以使用多种方法来填充或者删除缺失值，比如我们可以使用df = df.fillna(axis=0,method=’ffill’)来横向/纵向用缺失值前面的值替换缺失值 数据去重说明：对重复值按照指定要求处理 Excel 在Excel中可以通过点击数据—&gt;删除重复值按钮并选择需要去重的列即可，例如对示例数据按照创建时间列进行去重。从本实例开始，导入”示例数据2.xlsx” Pandas 在pandas中可以使用drop_duplicates来对数据进行去重，并且可以指定列以及保留顺序，例如对示例数据按照创建时间列进行去重df.drop_duplicates([‘创建时间’],inplace=True)。 格式修改说明：修改指定数据的格式 Excel 在Excel中可以选中需要转换格式的数据之后右键—&gt;修改单元格格式来选择我们需要的格式 Pandas 在Pandas中没有一个固定修改格式的方法，不同的数据格式有着不同的修改方法，比如类似Excel中将创建时间修改为年-月-日可以使用df[‘创建时间’] = df[‘创建时间’].dt.strftime(‘%Y-%m-%d’) 数据交换说明：交换指定数据 Excel 在Excel中交换数据是很常用的操作，以交换示例数据中地址与岗位两列为例，可以选中地址列，按住shift键并拖动边缘至下一列松开即可 Pandas 在pandas中交换两列也有很多方法，以交换示例数据中地址与岗位两列为例，可以通过修改列号来实现 数据合并说明：将两列或多列数据合并成一列 Excel 在Excel中可以使用公式也可以使用Ctrl+E快捷键完成多列合并，以公式为例，合并示例数据中的地址+岗位列步骤如下注意：公式中要使用&amp;，而不是+；（+用来做数值运算） Pandas 在Pandas中合并多列比较简单，类似于之前的数据插入操作，例如合并示例数据中的地址+岗位列使用df[‘合并列’] = df[‘地址’] + df[‘岗位’] 数据拆分说明：将一列按照规则拆分为多列 Excel 在Excel中可以通过点击数据—&gt;分列并按照提示的选项设置相关参数完成分列，但是由于该列含有[]等特殊字符，所以需要先使用查找替换去掉 Pandas 在Pandas中可以使用.split来完成分列，但是在分列完毕后需要使用merge来将分列完的数据添加至原DataFrame，对于分列完的数据含有[]字符，我们可以使用正则或者字符串lstrip方法进行处理，但因不是pandas特性，此处不再展开。 数据分组说明：对数据进行分组计算 Excel 在Excel中对数据进行分组计算需要先对需要分组的字段进行排序，之后可以通过点击分类汇总并设置相关参数完成，比如对示例数据的学历进行分组并求不同学历的平均薪资 Pandas 在Pandas中对数据进行分组计算可以使用groupby轻松搞定，比如使用df.groupby(“学历”).mean()一行代码即可对示例数据的学历进行分组并求不同学历的平均薪资，结果与Excel一致 数据计算说明：对数据进行一些计算 Excel 在Excel中有很多计算相关的公式，比如可以使用COUNTIFS来统计薪资大于10000的岗位数量有518个 Pandas 在Pandas中可以直接使用类似数据筛选的方法来统计薪资大于10000的岗位数量len(df[df[“薪资水平”]&gt;10000]) 数据统计说明：对数据进行一些统计计算 Excel 在Excel中有很多统计相关的公式，也有现成的分析工具，比如对薪资水平列进行描述性统计分析，可以通过添加工具库之后点击数据分析按钮并设置相关参 Pandas 在pandas中也有现成的函数describe快速完成对数据的描述性统计，比如使用df[“薪资水平”].describe()即可得到薪资列的描述性统计结果 数据可视化说明：对数据进行可视化 Excel 在Excel中可以通过点击插入并选择图表来快速完成对数据的可视化，比如制作薪资的直方图，并且有很多样式可以直接使用 Pandas 在Pandas中也支持直接对数据绘制不同可视化图表，例如直方图，可以使用plot或者直接使用hist来制作df[“薪资水平”].hist() 数据抽样说明：对数据按要求采样 Excel 在Excel中抽样可以使用公式也可以使用分析工具库中的抽样，但是仅支持对数值型的列抽样，比如随机抽20个示例数据中薪资的样本 Pandas 在pandas中有抽样函数sample可以直接抽样，并且支持任意格式的数据抽样，可以按照数量/比例抽样，比如随机抽20个示例数据中的样本 数据透视表说明：制作数据透视表 Excel 数据透视表是一个非常强大的工具，在Excel中有现成的工具，只需要选中数据—&gt;点击插入—&gt;数据透视表即可生成，并且支持字段的拖取实现不同的透视表，非常方便，比如制作地址、学历、薪资的透视表 Pandas 在Pandas中制作数据透视表可以使用pivot_table函数，例如制作地址、学历、薪资的透视表pd.pivot_table(df,index=[“地址”,”学历”],values=[“薪资水平”])，虽然结果一样，但是并没有Excel一样方便调整与多样 vlookup说明：利用VLOOKUP查找数据 Excel VLOOKUP算是EXCEL中最核心的功能之一了，我们用一个简单的数据来进行示例 Pandas 在Pandas中没有现成的vlookup函数，所以实现匹配查找需要一些步骤，首先我们读取该表格 接着将该dataframe切分为两个 接着将该dataframe切分为两个 结束语以上就是使用Pandas来演示如何实现Excel中的常用操作的全部过程，其实可以发现Excel的优点就是大多由交互式的点击完成数据处理，而Pandas则完全依赖于代码，对于有些操作比如数据透视表，用Excel制作更加方便，而有些操作比如数据的分组、计算等，因Pandas可以与NumPy等其他优秀的Python库结合而显得更加强大，所以我们在处理数据时也需要正确选择使用的工具！(从早起Python公众号学习)]]></content>
      <categories>
        <category>数据处理</category>
      </categories>
      <tags>
        <tag>Excel</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[浅谈 - 游戏行业/任天堂/VR游戏行业/VR游戏艾利克斯/VR发展局限]]></title>
    <url>%2F2020%2F05%2F13%2F%E6%B8%B8%E6%88%8F%3AVR%E6%B8%B8%E6%88%8F%2Findex%2F</url>
    <content type="text"><![CDATA[游戏行业大致有四种类型的公司:1、像微软、索尼这样既提供独家硬件、又搭建可供分发游戏的数字商店的平台（硬件绑定平台、运营平台、游戏引擎入口）； 2、像艺电Electronic Arts、动视暴雪这样的游戏发行商，它们为游戏的创作提供资金并管理其营销和发行进程，以换取IP许可权（游戏发行权/游戏周边制作权）以及大部分利润； 3、像顽皮狗Naughty Dog（索尼旗下全资子公司）、VisualConcepts（运动竞技NBA/WWE）这样的游戏研发工作室，就是单纯地开发、设计和制作游戏； 4、像Epic、Unity、亚马逊这样的基础设施供应商，运营着更底层、适用性更强的技术套件，使开发者能够轻松地创造、分发游戏。前者则按照收入百分比或其他标准分成； 5、任天堂：任天堂和以上四类都不太一样。它虽然也运营着像微软Xbox、索尼PlayStation这样的硬件平台，但任天堂出售的硬件产品中有85%软件是由任天堂自己制造的。这和行业平均水平恰恰相反（比如， PlayStation 用户把85%以上时间花在了非索尼发行的游戏）。这意味着，任天堂可能是游戏行业里的第五种公司。他们虽然也发售硬件，但这最主要是方便其开发部门制作自己想制作的游戏，至于是否吸引到了外部开发者，其实无关紧要。 任天堂：对放弃硬件、专注游戏说No在过去40年中，任天堂的游戏开发部门一直是业内最好的，这无可争议。根据GameRankings的研究，以IP生命力的维度看，有史以来排名前10的游戏中，有5个来自任天堂，而排名前20的游戏中，任天堂独占9个。 由于任天堂在游戏IP和内容上成绩斐然，但一直没有推出一个足够成功的分发平台，因此有投资者长期以来一直认为，任天堂应该退出硬件业务，专注于游戏。 支持这个策略的理由有三:首先，任天堂主机硬件的销售价格通常没有高出制造成本太多，这意味着其出售硬件的业务利润率不高。日本拆解公司FomalhautTechno Solutions曾发布报告，任天堂新一代游戏主机Switch的制造成本约为257美元，这其实相当接近Switch的300美元零售价。考虑到零售商还要获取一定利润，留给任天堂的利润十分微薄。任天堂当前的主要策略是靠软件创收。当然，理论.上还可以通过第三方软件销售分成来弥补缺陷，但从Switch平台现状看，这种第三方收入对任天堂微不足道。 其次，开发硬件、为其制定并执行营销策略、付诸生产并持有大量库存，这一系列操作对于游戏公司而言，成本其实也不低。 最后，专注硬件事实上将任天堂的游戏潜力极大限制在了少数拥有其硬件的用户手中。有超过1亿的PlayStation 和Xbox用户可能会乐意以60美元价格购买《塞尔达传说》或《超级马里奥》，但他们很难单独为了Switch 再花上300美元。 不过，事实上，过去二十年里，任天堂一直坚决拒绝“放弃硬件、专注游戏”的策略。幸运的是，正是因为它对硬件的专注和热爱，推动了主机游戏市场的重大创新。比如，正是任天堂首创了游戏机手柄和模拟摇杆，并且率先发行支持VR的便携式游戏机。 任天堂的内容文化任天堂拥有世界上许多最有价值的游戏IP，但它对这些IP的开发和使用策略却极度克制。在过去每个游戏主机上，针对特定IP，任天堂只发布一款重量级游戏。 你很难相信任何其他游戏或媒体公司会采取这种明智的方法。如果其他人拥有任天堂的IP，我们很可能每两到三年就会看到一款新的《塞尔达传说》。 任天堂并非不相信自己内容的软实力，但他们依然对过度开发表示坚决拒绝。在他们看来，不应该因为硬件需要而发布一款新游戏，不应该因为已经出现好几年、避免老玩家忘记而出品一款续集，更不应该因为股东需要或是业绩压力就盲目推出新作品。 任天堂相信，只有诞生了一个足够新的、真正让人兴奋的想法，才是推出重量级游戏或续作的最佳时机。对此我们应该持何种看法？ 一方面，这正是任天堂能始终生产出色游戏作品的原因；但另一方面，这也恰恰桎梏了任天堂在移动领域的发展，并且导致它直到现在都在这个领域几乎毫无建树。 如今，基于智能手机/平板电脑的游戏在整个行业内收入占比超过40%，在市场增量的占比更是超过67%。鉴于任天堂在主机游戏领域取得的巨大成功，毋庸置疑，它也应该能吸引休闲游戏玩家以及推出适用于移动设备的全新玩法。 所以许多人相信，总有一天，任天堂将在移动游戏领域占据一席之地（甚至是主导地位）。但这个局面真的会发生吗？我们先回归现实。 任天堂在移动游戏方面有三种核心模式第一种，任天堂自主创造、设计，自己构建、开发，并且完全自主运营； 第二种，任天堂共同制作或设计，然后将实际的开发和运营交给第三方； 第三种，任天堂仅参与总体创意讨论和提供品牌认可。 VR游戏：半衰期爱莉克丝 - 带领VR革命的先驱者2016年VR元年，但市面上也就是PSVR上的《生化危机7》《皇牌空战》和PC端的《节奏光剑》算是不错的。PS4上的VR游戏牺牲太大、体验不好，况且VR游戏是为了打造全新游戏体验的，难道就仅限于挥舞游戏手柄玩玩光剑吗？ 从steam母公司valve协助HTC做VR开始，期待valve真正”为VR崛起而做游戏“。毕竟在那么多做VR设备的公司里，只有valve才是正统的游戏开发公司。 每次有新主机发布的时候，都有人嫌弃护航大作不给力。如果把VR看作是一个新主机平台的话，整整四年后这个主机才迎来它唯一一款护航大作。之前的游戏只能是VR的实验性质产品。 VR游戏：实验性质产品 VS 真正意义产品虽然有着完整的游戏设计理念，但没有为VR优化过去的设计理念，一些游戏比如《节奏光剑》确实为VR量身打造了一套交互方式，但是又缺少了游戏行业发展70年来积累的设计理念 - 只有VR的新鲜点，没有游戏的设计艺术。 valve引用传统游戏设计理念：设计了很优秀的路线引导，通过NPC、声音、场景动画、场景光线等元素作为指引。比很多VR游戏公司高明，很多VR游戏可能被“进入一个世界”这句话给束缚了，一进入游戏就丢给玩家开放的场景，在VR的世界里，指引远比传统游戏更重要，因为在VR的世界里更容易迷失方向。在VR游戏里，探索的欲望要压过恐惧感才能激发玩家通关。 VR游戏特性在传统游戏里，玩家控制的是角色，再通过角色和世界互动；在VR游戏里，玩家自己就是角色，控制器就是角色的双手，这双手可以做现实世界中的绝大部分事情。特别是使用了valve自家的控制器就更有意思，它提供了全手指捕捉的功能，玩家可以看风景时自然把手扶在栏杆上等。 手柄定位精准，允许玩家多种射击方式：CAR射击方式，不把手伸直而把手枪怼在自己的脸前，并稍微把枪倾斜45度以获得舒适姿势，瞄准容易适合近距离和小场景作战。（疾速追杀John Wick） 装弹系统：真实更是游戏战斗乐趣的核心机制。模拟从背包拿弹夹，从后腰拿出的动作会使控制器的感应被身体挡住太多导致定位不精准，valve为了更好的体验规避技术上的小问题做出小妥协。 不完美：容易晕、佩戴不舒适、分辨率不够、有线缆缠绕等 VR行业分辨率还不够：现在视网膜屏或4k屏的效果，在VR至少要8k以上； 刷新率还不够：60帧不够，90帧是起步，120帧才能叫流畅。 无线传输速度不够 轻便、高性能、无线缺一不可！ 在VR游戏模拟走路：眩晕（画面切换一黑一亮瞬间移动，但破坏代入感；万向走步机） 2016技术元年：技术成熟曲线]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>产品经理</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《OKR工作法》思维导图]]></title>
    <url>%2F2020%2F05%2F02%2F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E3%80%8AOKR%E5%B7%A5%E4%BD%9C%E6%B3%95%E3%80%8B%2Findex%2F</url>
    <content type="text"><![CDATA[在这里，O表示目标(Objective)，KR表示示关键结果(Key Results)。目标就是你想做什么事情，(比如上线一款游戏)，关键结果就是如何确认你做到了这件事，(比如一天2.5万下载量或一天5万美元收入)，按照年度、季度设置OKR都可以，但一定要关联上公司的愿景使命。有挑战的目标能激发团队的斗志，明确的关键结果又会让大家觉得这不是空谈。如果你发现一起床就有做事的激情，说明你设置了一个好的目标；如果你看到关键结果时有点担心，那这个关键结果的设置就是恰当的。 —— 引自章节：前言 《OKR工作法》思维导图 《OKR工作法》读书笔记整理大纲一、什么是OKR工作OKR的名词解释： Objectives 目标 Key Results 关键结果 OKR的本质 OKR是一种战略目标任务体系，是一套明确目标并跟踪其完成情况的管理工具和方法。 OKR由一个需要极致聚焦的明确目标和量化该目标的数个关键结果这两大主要部分组成。 二、如何设定一个好的OKR一个好的OKR是什么样的？ 如果你发现一起床就有做事的激情，说明你设置了一个好的目标； 如果你看到关键结果时有点担心，那这个关键结果的设置就是恰当的。 一个好的OKR的目标必须是可衡量的，是有挑战性却又不至于让人绝望， 对于完成它，你们大约抱有50%左右的信心。 如何设定OKR? 1.在设定OKR之前，先明确你的或企业的使命。 2.先设定公司层面的OKR，然后才是部门的OKR、个人OKR。 3.设定一个必须是有挑战性的目标，如果不是有多条产品线的，目标最好不要多于1个。 4.自上而下搜集员工认为公司目前最应该聚焦的目标。 5.召集高管开会，将衙门提出的备选目标与员工的放在一起，会上集体过一遍，最终投票选出目标。 6.设定好目标后，针对目标设置3-4个能衡量目标是否实现的关键结果。 7.设定好关键结果后，给每个关键结果设定一个初始信心指数 --即你们预估完成这一关键结果的概率为多少，初始值一般建议都为50%,并在今后的OKR运行中跟踪这一数字。 设定OKR目标的3个原则 1.目标要明确方向且鼓舞人心 2.目标要有时间期限，有确定的截止日期更有助于目标实现 3.由独立的团队来实现目标，即执行的主体必须清清楚楚 三、如何运行你的OKR执行前的心理建设 掌握“承担责任-庆祝结果”的节奏 每周一，团队一起开会盘点OKR，来明确本周具体负责完成哪些任务。 每周五，召开“胜利会议”，让每个团队都可以展示本周的工作成果，并准备一些酒水饮料和点心等庆祝这些成果。 易造成目标无法达成的5个要素 1.设置多个目标但没有给目标设定优先级 2.缺乏沟通，导致团队其他成员没能准确理解目标 3.没有做好具体落实目标的计划，只是空谈目标 4.没有吧时间花在重要的事情上，而去做了许多偏离目标的事情 5.轻易放弃]]></content>
      <categories>
        <category>读书笔记</category>
      </categories>
      <tags>
        <tag>XMind</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《心流》思维导图]]></title>
    <url>%2F2020%2F05%2F01%2F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E3%80%8A%E5%BF%83%E6%B5%81%E3%80%8B%2Findex%2F</url>
    <content type="text"><![CDATA[“很多人一离开校门就不再学习，因为一二十年受外界强迫的学生生涯留下了许多不愉快的回忆。他们长期受老师和教科书操纵，毕业的那天就是他们的自由之日。 但放弃运用象征技巧的人永远不可能获得真正的自由。他的思考会受邻居、报纸社论、电视节目所左右，他会被专家学者牵着鼻子走。在理想状况下，强迫教育的结束应该就是自动自发追求更高教育的开始。这时，学习的目标不再是分数、文凭或找份好工作。而是了解周遭的事物，从个人经验中发掘意义，建构价值观，思考者会从这里面找到深邃的乐趣。” —— 引自第247页 《心流》思维导图 《心流》读书笔记整理大纲：1. 人何时最幸福？人类不满的根源:内在秩序的缺失 最优体验和心流是幸福的代名词 佛洛依德“本我”“超我”“自我” 2. 意识的运作方式意识 意图 注意力 自我 精神熵 最优体验（精神负熵） 3. 心流的构成要素具挑战性的活动 知行合一 明确目标与及时反馈 全神贯注 掌握自如 浑然忘我 时间感异常 4. 在日常生活中寻找心流4.1 工作之乐心理体验抽样法：工作心流&gt;休闲心流 如何像玩一样工作？ 有效使用闲暇时间 4.2 人际之乐如何面对孤独决定你的独处质量 将家庭生活转化为心流 必须通过独特化与整合 保持沟通渠道畅通 挑战与技巧的畅通 胸怀大我 4.3 思维之乐4.4 感官之乐]]></content>
      <categories>
        <category>读书笔记</category>
      </categories>
      <tags>
        <tag>XMind</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《增长黑客》思维导图]]></title>
    <url>%2F2020%2F04%2F27%2F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E3%80%8A%E5%A2%9E%E9%95%BF%E9%BB%91%E5%AE%A2%E3%80%8B%2Findex%2F</url>
    <content type="text"><![CDATA[“AARRR”转化漏斗模型，即： Acquisition(获取用户)、Activation(激发活跃)、 Retention(提高留存)、 Revenue(增加收入)、 Referral(传播推荐)。当我评估一家公司的商业蓝图时， 是否懂得运用黑客增长术会与如何研发产品服务视为同等重要。 —— 引自第2页 《增长黑客》思维导图 《增长黑客》读书笔记整理大纲一、增长黑客的概念增长黑客是硅谷当下热门的新商业方法论。 增长黑客是指通过创造性的方法、科学的数据分析工具，可以用极地的费用在短时间内吸引数以百万计的用户的增长的方法。 它是一种依赖技术新渠道、大数据与数据分析来实现快速测试产品开发&amp;影响新想法，并利用用户行为数据验证或寻求演进的科学方法。 二、增长黑客的方法论2.1 搭建跨部门合作的增长团队人员构成 增长负责人 产品经理 营销专员 数据分析师 产品设计师 其他必要的准备 团队负责人需要向公司管理层直接汇报工作的汇报制度与通道 增长工作必须获得高层强有力的支持 2.2 确保产品本身是个好产品不可或缺性调查：在用户心中不可或缺的概率大于等于40% 客户留存率调查：可以参考同行内有足够可比性的成功产品的情况 找到你的产品或服务令用户眼前一亮，发现它对自己的价值的“啊哈时刻” 深挖数据，跟踪活跃用户行为，以数据为依据，适当做出调整 2.3 确定增长杠杆与北极星指标根据自己企业的行为与特点找出与增长相关的所有关键因素，建立你自己的基本增长等式 在所有这些关键因素中，找出哪一个变量最能反映你产品的不可或缺体验的实现情况，将它设定为北极星指标，时时关注这个指标以此来保证自己没有偏离方向 整合数据资源：你需要简历统一的数据仓库，花费必要的时间收集数据并配备恰当的分析能力；需要能跟踪每一个用户从第一次访问到经历“啊哈时刻”或者到弃用产品的整个过程 2.4 进入快节奏实验的循环试验想法的准备：试验想法包含想法名称、想法描述、假设待测指标；集思广益，收集团队内外的各种建议来改善试验想法；提交想法时，提交者应根据ICE评分体系给出该想法的评分，帮助团队在排定优先级时更好地做出决定，评过分的想法才能进入试验想法储备库 无论测试的是产品的哪个方面，这一循环中的每个步骤都应保持固定的节奏，以每一两周完成一次循环为佳 增长团队应每周召开一次1小时左右的会议以审视实验结果并决定下一周要执行的试验 三、增长黑客的技巧四种类型的增长试验 获客：实现营销语言、营销渠道与市场的匹配 激活：让潜在用户真正使用你的产品 留存：唤醒并留住用户 变现：提高每位用户带来的收益 避免增长停滞的良性循环 对增长保持关注，持续关注用户满意度，并积极地发现用户不满的早期迹象。 与鲨鱼为伍：时刻保持警惕，避免陷入自满和懈怠，像最初一样坚持落实增长黑客的循环节奏。]]></content>
      <categories>
        <category>读书笔记</category>
      </categories>
      <tags>
        <tag>XMind</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《深度工作》思维导图]]></title>
    <url>%2F2020%2F04%2F20%2F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E3%80%8A%E6%B7%B1%E5%BA%A6%E5%B7%A5%E4%BD%9C%E3%80%8B%2Findex%2F</url>
    <content type="text"><![CDATA[想要迅速掌握困难的事物，你必须高度专注，不能有任何干扰。最小阻力原则：在工作环境上，若各种行为对于底线的影响没有得到明确的反馈意见，我们倾向于采用当下最简单易行的行为。它受到度量黑洞的保护，少有人对其加以审视，在这种原则支配下的工作文化，免去了我们短期内保持专注和做计划的忧虑，却牺牲了长期的满足感和真实价值的产出。我们的大脑是根据我们关注的事物来构建世界观的。一个人的身体或大脑在自觉努力完成某项艰难且有价值的工作过程中达到极限时，往往是最优体验发生的时候。 —— 引自第1页 《深度工作》思维导图 《深度工作》读书笔记整理大纲一、认识深度工作相关概念 深度工作 浮浅工作 深度工作假设 新经济形势下取得成功的三类人 高技术工作：善用智能机器且具创造性 超级明星：行业尖子 所有者：拥有资本 新经济形势下赢家的两种核心能力 迅速掌握复杂工具的能力 达到精英水平 深度工作的重要性 助你迅速掌握困难事物 助你实现精英级产出 降低深度工作的思维定式和偏见 最小阻力原则：浮浅工作更简单 （案例：频繁召开例会） 忙碌代表生产力：围绕浮浅工作表面忙碌 对互联网顶礼膜拜：认为与“网络”相关都是好的 论证深度工作是有意义的 神经学角度论证：以熟练掌握注意力改善人生体验 心理学角度论证：心流理论和印证深度工作让人更有价值 哲学角度论证：拥抱深度工作，使人有价值感和意义 （工匠的神圣感） 二、践行深度工作的4个原则6个策略 （工作要深入）选定你的深度哲学 禁欲主义哲学：摒弃或最小化浮浅职责，实现深度工作最大化 双峰哲学：将时间分成两块，分别用于深度工作和其他 节奏哲学：将深度工作转化为常规习惯 新闻记者哲学：随时可插入深度工作 习惯化 （查尔斯达尔文严格内化的习惯） 要有大手笔 （J.K.罗琳写作《死亡圣器》入驻五星酒店） 不要独自工作、在恰当时机采用协作方式 像经商一样执行：4个原则 关注极端重要的事 抓住引领性指标 准备醒目计分板 定期问责 定期放松大脑有助深度工作 （图安逸） 4个策略 （拥抱无聊，克服分心） 计划网络使用时间，严格执行 （忌不断分心，要不断专注） 高强度工作，高效利用时间 （像罗斯福一样工作） 案例：作者在上下班途中冥想 （利用本可能被浪费的时间）（有成果的冥想） 美国记忆力冠军罗恩怀特的记牌敲门 （记住一副牌） 3个策略 （远离社交媒体） 将时间花在高影响力的活动上 （采用关键少数法则） 戒掉社交媒体 高质量活动替代 （不要用网络来消遣） 5个策略 （砍掉浮浅工作） 置顶日程计划，允许突发性改变或主动寻求改变 （做好一天的计划） 明确活动深浅度，倾注于深度工作 （定量分析每项活动的深度） 设置浮浅工作时间 （向老板申请浮浅工作预算） 案例：作者实行固定日程生产力 （设置工作时间上限）（5点半之前结束工作） 掌握电子通讯控制权 （变得不容易联系到）]]></content>
      <categories>
        <category>读书笔记</category>
      </categories>
      <tags>
        <tag>XMind</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[搭载多种传感器的虚拟现实游戏的手柄设计与开发]]></title>
    <url>%2F2020%2F02%2F15%2FGame_Controller%2Findex%2F</url>
    <content type="text"><![CDATA[本文描述了VR游戏手柄的使用场景及用户需求，据此来定义产品的核心功能，从而完成主芯片选型和确定外围电路设计，包括基于Arduino的软件设计部分Demo。]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>Arduino</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Object-Oriented Design UML]]></title>
    <url>%2F2020%2F02%2F06%2Food_uml%2Findex%2F</url>
    <content type="text"><![CDATA[本文使用统一建模语言UML，面向对象设计EPS系统（电子处方服务系统）。EPS系统对“线上+线下看病解决方案”提供软件支持：患者在线看病、医生在线开具电子处方、患者线下取药报销的过程可通过EPS系统实现。（需求场景描述、类图、CRC卡片、协作图、时序图、状态图、用例图、Demo）]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>UML</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[A Special Game - by Python3]]></title>
    <url>%2F2020%2F02%2F01%2Fpython_game%2Findex%2F</url>
    <content type="text"><![CDATA[本文是readme.txt文档，介绍了我用Python开发的GUI（tkinter）人机交互小游戏的界面和操作步骤，下载地址：https://github.com/lumos0314/A-Special-Game.git]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[学习「TED:为什么舒适会毁了你的生活」]]></title>
    <url>%2F2019%2F08%2F03%2FTED%E8%BF%9C%E7%A6%BB%E8%88%92%E9%80%82%2Findex%2F</url>
    <content type="text"><![CDATA[]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>TED</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何长时间高效学习？]]></title>
    <url>%2F2019%2F07%2F12%2F%E7%9F%A5%E4%B9%8Elive%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%9A%E5%A6%82%E4%BD%95%E9%95%BF%E6%97%B6%E9%97%B4%E9%AB%98%E6%95%88%E5%AD%A6%E4%B9%A0%EF%BC%9F%2Findex%2F</url>
    <content type="text"><![CDATA[]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>知乎</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[友邻优课「每日外刊精读计划」]]></title>
    <url>%2F2019%2F07%2F12%2F%E5%8F%8B%E9%82%BB%E4%BC%98%E8%AF%BE%2Findex%2F</url>
    <content type="text"><![CDATA[今天是友邻优课每日外刊精读的Day1，毕业前就把“假期好好学英语”这个计划提上日程了！本文作为我学习此课程过程中的线上笔记本，我会每日更新当天的笔记，方便我睡前翻看~ 写在前面我很熟悉线上英语付费课程的运营模式，所以当我：关注友邻优课的公众号-报名每日外刊精读课程并付费-添加老师微信-收到老师开课提醒-收到老师链接邀请入群-开始在APP上的第一次学习时，不禁回想起我成为52期薄荷阅读奇迹男孩课程老师Edward的第一天…..日常感慨：日子过得好快啊😏 学习目的自从4月20日从bcz离职后，就再没碰过英语了，自身英语功力退步的同时😂 在pyq看到不少人提前去🇬🇧读语言班了🌚 害怕自己去了英国之后跟不上呀，于是报名友邻优课跟着每天精读外刊：1、不花钱是根本没动力学习啊（坚持学习80天/共100天可全额退款）；2、能帮助我养成 坚持每天学点儿英语 的习惯啊！ 学习方法考过四六级、托福、雅思的我：英语学习体系已经基本形成了！（骄傲脸-_-） 像我这么懒的人在学习英语的过程中，研究琢磨出了适合自己（懒人）的学习方法：在学习英语时，同一时间内调动各种能调用的器官！耳朵听、眼睛看、动手写、嘴巴说。这样的学习方式相当于在同一时间内重复了四遍！重复的次数越多记忆效果越好，就能逐渐就培养出语感了… 通过对本次课程学习材料的分析，制定了有针对性的训练计划，具体如下： 1、（刷牙洗脸护肤洗澡吃饭无聊时）打开YLYK的App播放「讲解版」：就是中文为主混杂英文的那种对阅读材料的讲解（泛听：对当天学习内容有个大体了解 2、切换到「朗读版」开始循环播放（看着阅读材料进行影子跟读：比音频慢半拍跟读且不按暂停，读得卡顿的地方就是不熟不会的，在随后几遍的跟读过程中要留意这些地方 3、看「讲解版」文字部分的解析，如有的单词短语没有解析就自己查词典，解决掉影子跟读时不会和不熟的单词和短语 4、再切换回「朗读版」开始循环播放（尝试脱离阅读材料进行影子跟读，直到完全不看阅读材料就能全文影子跟读 5、整理记录当天学到的不会和不熟的单词短语以及好的句式结构 学习笔记用以上的学习方法坚持学习「每日精读外刊」，在下面记录笔记：]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>友邻优课</tag>
        <tag>每日外刊精读计划</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[学习「“笨方法”学Python 3」第四篇]]></title>
    <url>%2F2019%2F07%2F10%2Fpython4%2Findex%2F</url>
    <content type="text"><![CDATA[习题31 做出决定1234567891011121314151617181920212223242526272829303132333435363738print("""You enter a dark room with two doors,Do you go through door #1 or door #2?""")door = input("&gt; ")if door == "1": print("There's a giant bear here eating a cheese cake. ") print("What do you do? ") print("1. Take the cake. ") print("2. Scream at the bear. ") bear = input("&gt; ") if bear == "1": print("The bear eats your face off. Good job! ") elif bear == "2": print("The bear eats your leggs off. Good job! ") else: print(f"Well, doing &#123;bear&#125; is probably better. ") print("Bear runs away. ")elif door == "2": print(" You stare into the endless abyss at Cthulhu's retina.") print("1. Blueberries. ") print("2. Yellow jacket clothespins. ") print("3. Understanding revolves yelling melodies. ") insantity = input("&gt; ") if insantity == "1" or insantity == 2: print("Your body survives powered by a mind of jello. ") print("Good job! ") else: print("The insantity rots your eyes into a pool of muck. ") print("Good job! ")else: print("You stumblr around and fall on a knife and die. Good job! ") 习题32 循环和列表12345678910111213141516171819202122the_count = [1,2,3,4,5]fruits = ['apple', 'oranges', 'pears', 'apricots']change = [1,'pennies', 2, 'dimes', 3 , 'quarters']for number in the_count: print(f"This is count &#123;number&#125;")for fruit in fruits: print(f"A fruit of type : &#123;fruit&#125;")for i in change: print(f"I got &#123;i&#125;")elements = []for i in range(0, 6): print(f"Adding &#123;i&#125; to the list. ") elements.append(i)for i in elements: print(f"Element was : &#123;i&#125;") 习题33 while循环123456789101112131415i = 0numbers = []while i &lt; 6 : print(f"At the top i is &#123;i&#125; ") numbers.append(i) i += 1 print("Numbers now : ", numbers) print(f"At the bottom i is &#123;i&#125; ")print("The numbers: ")for num in numbers: print(num) 习题34 访问列表的元素123#animals = ['bear','tiger','penguine','zebra']#bear = animals[0]#访问列表里的第一个元素 习题35 分支和函数1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677from sys import exitdef gold_room():print("This room is full of gold. How much do you take? ")choice = input("&gt; ")if "0" in choice or "1" in choices:how_much = int(choice)else:dead("Man, learn to type a number. ")if how_much &lt; 50:print("Nice, you're not greedy, you win! ")exit(0)else:dead("You greedy bastard!")def bear_room():print("There is a bear here. ")print("The bear has a bunch of another door. ")print("The fat bear is in front of another door. ")print("How are you going to move the bear? ")bear_moved = Falsewhile True:choice = input("&gt; ")if choice == "take money":dead("The bear looks at you then slaps your face off. ")elif choice == "taunt bear" and not bear_moved:print("The bear has moved from the door. ")print("You can go through it now. ")bear_moved = Trueelif choice == "taunt bear" and bear_moved:dead("The bear gets pissed off and chews your leggs off. ")elif choice == "open door" and bear_moved:gold_room()else :print("I got no idea what that means. ")def cthulhu_room():print("Here you see the great evil Cthulhu. ")print("He, it , whatever stares at you and you go insane. ")print("Do you flee for your life or eat your head? ")choice = input("&gt; ")if "flee" in choice:start()elif "head" in choice:dead("Well that was tasty! ")else:cthulhu_room()def dead(why):print(why, "Good job! ")exit(0)def start():print("You are in a dark room. ")print("There is a door to your right and left. ")print("Which one do you take? ")choice = input("&gt; ")if choice == "left":bear_room()elif choice == "right":cthulhu_room()else:dead("You stumble around the room until you starve. ")start() 习题36 设计和调试12 习题37 复习各种符号12 习题38 列表的操作12345678910111213141516171819202122ten_things = "Apples Oranges Crows Telephone Light Sugar"print("Wait there are not 10 things in that list. Let's fix that. ")stuff = ten_things.split(' ')more_stuff = ["Day", "Night", "Song" ,"Frisbee", "Corn", "Banana", "Girl", "Boy"]while len(stuff) != 10:next_one = more_stuff.pop(0)print("Adding: ",next_one)stuff.append(next_one)print(f"There are &#123;len(stuff)&#125; items now. ")print("There we go: ", stuff)print("Let's do some things with stuff. ")print(stuff[1])print(stuff[-1])print(stuff.pop())print(' '.join(stuff))print('#'.join(stuff[3:5])) 习题39 字典，可爱的字典123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051states = &#123;'Oregon':'OR','Florida':'FL','California':'CA','New York':'NY','Michigan':'MI'&#125;cities = &#123;'CA': 'San Francisco','MI':'Detroit','FL':'Jacksonville'&#125;cities['NY'] = 'New York'cities['OR'] = 'Fortland'print('-' * 10)print('NY State has:', cities['NY'])print("OR State has:", cities['OR'])print('-' * 10)print("Michigan's abbrevition is: ", states['Michigan'] )print("Florida's abbrevition is: ", states['Florida'])print('-' * 10)print("Michigan's has: ", cities[states['Michigan']] )print("Florida's has: ", cities[states['Florida']])print('-' * 10)for state, abbrev in list(states.items()):print(f"&#123;state&#125; is abbrevited &#123;abbrev&#125;")print('-' * 10)for abbrev, city in list(cities.items()):print(f"&#123;abbrev&#125; has the city &#123;city&#125;")print('-' * 10)for state, abbrev in list(states.items()):print(f"&#123;state&#125; state is abbrevited &#123;abbrev&#125;")print(f"and has city &#123;cities[abbrev]&#125;")print('-' * 10)state = states.get('Texas')if not state:print("Sorry, no Texas.")city = cities.get('Tx','Does Not Exist')print(f"The city for the state 'TX' is: &#123;city&#125;") 习题40 模块、类和对象class Song(object): def __init__(self, lyrics): self.lyrics = lyrics def sing_me_a_song(self): for line in self.lryics: print(line) happy_bday = Song(["Happy birthday to you", "I don't want to get sued", "So I'll stop right there"]) bulls_on_parade = Song(["They rally aroud the family", "With pockets full of shells"]) happy_bday.sing_me_a_song() bulls_on_parade.sing_me_a_song() # __init__ 左右下划线是两个]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>“笨方法”学Python 3</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[学习「TED:滚蛋吧！小情绪」]]></title>
    <url>%2F2019%2F07%2F08%2FTED%E6%BB%9A%E8%9B%8B%E5%90%A7%E5%B0%8F%E6%83%85%E7%BB%AA%2Findex%2F</url>
    <content type="text"><![CDATA[]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>TED</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[学习「“笨方法”学Python 3」第三篇]]></title>
    <url>%2F2019%2F07%2F07%2Fpython3%2Findex%2F</url>
    <content type="text"><![CDATA[习题21 函数可以返回某些东西123456789101112131415161718192021222324252627282930def add(a, b):print(f"ADDING &#123;a&#125; + &#123;b&#125;")return a + bdef substract(a, b):print(f"SUBSTRACTING &#123;a&#125; - &#123;b&#125;")return a - bdef multiply(a, b):print(f"MULTIPLYING &#123;a&#125; * &#123;b&#125;")return a * bdef divide(a, b):print(f"DIVIDING &#123;a&#125; / &#123;b&#125; ")return a / bprint("Let's do some math with just functions! ")age = add(30, 5)height = substract(78, 4)weight = multiply(90 , 2)iq = divide(100, 2)print(f"Age:&#123;age&#125;, Height:&#123;height&#125;, Weight:&#123;weight&#125;, Iq:&#123;iq&#125;")print("Here is a puzzle.")what = add(age, substract(height, multiply(weight,divide(iq, 2)))) #从里到外print("That's becomes: ", what , "Can u do it by hand? ") 习题22 到现在为止你都学到了什么123#回顾之前遇到的每一个词和每一个符号 #说明他们的作用 #做一份列表 习题23 字符串、字节串和字符编码12345678910111213141516171819import sysscript, encoding, error = sys.argvdef main(language_file, encoding, errors): line = language_file.readline() if line: print_line(line, encoding, errors) return main(language_file, encoding, error)def print_line(line, encoding, errors): next_lang = line.strip() raw_bytes = next_lang.encode(encoding, errors = errors) cooked_string =raw_bytes.decode(encoding,errors = errors)print(raw_bytes, "&lt;===&gt;",cooked_string)languages = open("languages.txt", encoding = "utf-8")main(languages, encoding, error) 习题24 更多的练习12345678910111213141516171819202122232425262728293031323334353637383940print("Let's practice everything. ")print('You\'d need to know \'bout escapes with \\ that do:') #\后分别显示‘ ’ \print('\n newlines and \t tabs. ') #换行和水平制表，注意\n后面有个空格poem = """ #'''和下一行不在同一行，因此这一行有个空格\tThe lovely worldwith logic so firmly plantedcannot discern \n the needs of lovenor comprehand passion from intuitionand requires an expanation\n\t\twhere there is none."""print("-----------")print(poem)print("-----------")five = 10 - 2 + 3 - 6print(f"This should be five: &#123;five&#125;")def secret_formula(started):jelly_beans = started * 500jars = jelly_beans / 1000crates = jars / 100return jelly_beans, jars , cratesstart_point = 10000beans , jars, crates = secret_formula(start_point)print("With a staring point of: &#123;&#125;".format(start_point)) #调用方法，方法里有参数print(f"We'd have &#123;beans&#125;, &#123;jars&#125; jars, and &#123;crates&#125; crates. ")start_point = start_point / 10print("We can also do that this way:")formula = secret_formula(start_point)print("We'd have &#123;&#125; beans , &#123;&#125;jars, and &#123;&#125; crates.".format(*formula)) #因为函数有返回值 习题25 更多更多的练习12345678910111213141516171819202122232425262728293031323334353637383940print("Let's practice everything. ")print('You\'d need to know \'bout escapes with \\ that do:') #\后分别显示‘ ’ \print('\n newlines and \t tabs. ') #换行和水平制表，注意\n后面有个空格poem = """ #'''和下一行不在同一行，因此这一行有个空格\tThe lovely worldwith logic so firmly plantedcannot discern \n the needs of lovenor comprehand passion from intuitionand requires an expanation\n\t\twhere there is none."""print("-----------")print(poem)print("-----------")five = 10 - 2 + 3 - 6print(f"This should be five: &#123;five&#125;")def secret_formula(started):jelly_beans = started * 500jars = jelly_beans / 1000crates = jars / 100return jelly_beans, jars , cratesstart_point = 10000beans , jars, crates = secret_formula(start_point)print("With a staring point of: &#123;&#125;".format(start_point)) #调用方法，方法里有参数print(f"We'd have &#123;beans&#125;, &#123;jars&#125; jars, and &#123;crates&#125; crates. ")start_point = start_point / 10print("We can also do that this way:")formula = secret_formula(start_point)print("We'd have &#123;&#125; beans , &#123;&#125;jars, and &#123;&#125; crates.".format(*formula)) #因为函数有返回值 习题26 恭喜你，现在j可以考试了！12345678910111213141516171819202122232425262728293031323334353637383940print("How old are you?", end=' ')age = input()print("How tall are you?", end=' ')height = input()print("How much do you weigh?", end=' ')weight = input()print(f"So, you're &#123;age&#125; old, &#123;height&#125; tall and &#123;weight&#125; heavy.")script, filename = argvtxt = open(filenme)print("Here's your file &#123;filename&#125;:")print(tx.read())print("Type the filename again:")file_again = input("&gt; ")txt_again = open(file_again)print(txt_again_read())print('Let\'s practice everything.')print('''You\'d need to know \'bout escapeswith \\ that do \n newlines and \t tabs.''')poem = """\tThe lovely worldwith logic so firmly plantedcannot discern \n the needs of lovenor comprehend passion from intuitionand requires an explanation\n\t\twhere there is none."""print("--------------")print(poem)print("--------------") 习题27 记住逻辑关系12#and：与（既...又 全true才true#or：或（有true即true 习题28 布尔表达式练习1print(3 != 4 and not ("testing" != "test" or "Python" == "Python")) 习题29 if语句123456789101112131415161718192021222324252627#if下一行4个空格缩进#4个空格常被作为缩进排版的一个单位。缩进的确切解释并未详细指定(使用空格还是tab).Tab一定要设置为8个空格 (而非4个)。people = 20cats = 30dogs = 15if people &lt; cats: #20&lt;30? 1 打印 print("Too many cats!The world is doomed! ")if people &gt; cats: #20&gt;30? 0 print("Not many cats!The world is saved! ")if people &lt; dogs: #20&lt;15? 0 print("The world is drooled on! ")if people &gt; dogs: #20&gt;15 1 打印 print("The world is dry! ")dogs += 5 #20if people &gt;= dogs: #20&gt;=20 1 打印 print("People are greater than or equal to dogs. ")if people &lt;= dogs: #20&lt;=20 1 打印 print("People are less than or equal to dogs. ")if people == dogs: #20=20 1 打印 print("People are dogs. ") 习题30 else和if#if elif else后面都有： people = 30 cars = 40 trucks = 15 if cars &gt; people: print("We should take the cars. ") elif cars &lt; people: print("We should not take the cars. ") else: print("We can't decide. ") if trucks &gt; cars: print(" That's too many trucks. ") elif trucks &lt; cars: #if不满足看elif满不满足，而不是else（先elif再else 并列就按先后顺序来 print("Maybe we coule take the trucks. ") else: print("We still can't decide. ") if people &gt; trucks: print("Alright , let's just take the trucks. ") else: print("Fine, let's stay home then. ")]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>“笨方法”学Python 3</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一言]]></title>
    <url>%2F2019%2F07%2F03%2F%E6%84%9F%E6%82%9F%2Findex%2F</url>
    <content type="text"><![CDATA[洗澡的时候粗略听完了「知乎live：如何高效阅读英文文献–毛羽立」，并浏览了作者的高赞回答： 为什么有的人好像什么都知道但现实中却一事无成？毛羽立的回答：🔗https://www.zhihu.com/question/24230372/answer/27132195 （未完待续…]]></content>
      <categories>
        <category>人生感悟</category>
      </categories>
      <tags>
        <tag>感悟</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用一款实用app「duet」把iPad Pro作为Macbook Pro扩展屏]]></title>
    <url>%2F2019%2F07%2F03%2Fduet%2Findex%2F</url>
    <content type="text"><![CDATA[记得2016年左右我曾尝试用duet把iPad Air2作为Macbook的扩展屏，那时候由于duet刚在App Store推出不久且是付费软件，用户并没有太多，我的使用频率也不高。自从我把设备升级成iPad Pro和Macbook Pro后，因为这两款更新后的设备屏幕尺寸大、屏占比大，所以没有把iPad作为扩展屏的必要。 今年九月份苹果即将推出macOS Catalina以取代macOS Mojave，在新版本的系统中会增加如今duet所能实现的功能（Sidecar：Apps on macOS Catalina automatically support an expanded workspace with iPad and Apple Pencil.）。在duet变得鸡肋前，我当然是要充分高效的使（榨）用（干）它了！☃️ 实测效果VS Code和terminal分屏显示😘 屏幕保护程序aerial和duet相得益彰🧐 以上是用「duet」把iPad Pro作为Macbook Pro扩展屏的实际效果图，实测体验感极佳。iPad Pro的桌面为「桌面12」（Macbook Pro💻已创建11个桌面）：是可以把任何一个打开窗口分配到任何一个桌面中去，操作极其方便且没有学习成本。若想用iPad看长代码，则可如图直接把iPad竖屏，「duet」自动调整分辨率等。 当然在一切配置好之前也遇到了问题：无法分屏只能镜像显示。如下解决措施： 123更新mac端「duet」版本官方更新下载速度太慢且不是最新版本www.pc6.com下载2.7.4更新版本.zip]]></content>
      <categories>
        <category>好物推荐</category>
      </categories>
      <tags>
        <tag>App</tag>
        <tag>duet</tag>
        <tag>iPadPro</tag>
        <tag>MacbookPro</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[学习「TED:如何掌控你的自由时间」]]></title>
    <url>%2F2019%2F07%2F01%2FTED%E6%8E%8C%E6%8E%A7%E8%87%AA%E7%94%B1%E6%97%B6%E9%97%B4%2Findex%2F</url>
    <content type="text"><![CDATA[]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>TED</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[学习「“笨方法”学Python 3」第二篇]]></title>
    <url>%2F2019%2F07%2F01%2Fpython2%2Findex%2F</url>
    <content type="text"><![CDATA[习题11 提问12345678print("How old are you?") #可以在每行后面加end = ‘’age = input()print("How tall are you?")height = input()print("How much do you weight?")weight = input()print(f"So, you're &#123;age&#125; old , &#123;height&#125; tall and &#123;weight&#125; heavy.") 习题12 提问别人12345age = input("How old are you?") #输入提示 height = input("How tall are you?")weight = input("How much do you weigh?")print(f"So, you're &#123;age&#125; old , &#123;height&#125; tall and &#123;weight&#125; heavy.") 习题13 参数、解包和变量12345678from sys import argv #从系统导入参数 python3.7 exl13.py 中，exl13.py就是个参数script, first , second, third = input() # argv是unpack解包#不把所有的参数放到一个变量里，所以赋值给了4个变量#把argv中的东西取出，解包，将所有的参数依次赋值给左边的这些变量print("The script is called:", script)print("Your first variable is:", first)print("Your second variable is:", second)print("Your third variable is:", third) 习题14 提示和传递12345678910111213141516171819202122from sys import argvscript, user_name = argv #输入两个参数变量 解包prompt = '&gt; ' #先对prompt赋值print(f"Hi &#123;user_name&#125;, I'm the &#123;script&#125; script. ")print("I'd like to ask you a few questions.")print(f"Do you like me &#123;user_name&#125;?")likes = input(prompt) #提示输入print(f"Where do you live &#123;user_name&#125;?")lives = input(prompt)print("What kind of computer do you have? ")computer = input(prompt)print(f'''Alright, so you said &#123;likes&#125; about liking me.You live in &#123;lives&#125;. Not sure where that is.And you have a &#123;computer&#125; computer. Nice. #显示之前输入的内容''') 习题15 读取文件123456789101112131415from sys import argvscript, filename = argv #argv用来添加参数以获取文件名 filename就是打开的文件名txt = open(filename) #把文件打开并赋值给txtprint(f"Here's your file &#123;filename&#125;:") #打印文件名print(txt.read()) #打印文件内容 在txt上调用read（）函数 嘿txt执行你的read命令print("Type the filename again:")file_again = input("&gt;") #提示输入file nametxt_again = open(file_again) #把文件赋值给txt_againprint(txt_again.read()) #嘿txt_)txt_again执行你的read命令 然后print出来 习题16 读写文件123456789101112131415161718192021222324252627282930313233from sys import argvscript, filename = argvprint(f"We're going to erase &#123;filename&#125;.")print("If you don't want that, hit CTRL-C(^C). ")print("If you do want that, hit RETURN. ")input("?") #无论敲什么都会进行下面的...print("Openning the file...")target = open(filename, 'w') #w的模式打开print("Truncating the file. Goodbye! ")target.truncate() #调用truncate方法print("Now I'm going to ask you for three lines. ")line1 = input("line 1 : ")line2 = input("line 2 : ")line3 = input("line 3 : ")print("I'm going to write these to the file. ")target.write(line1) #调用write方法写入target.write("\n")target.write(line2)target.write("\n")target.write(line3)target.write("\n")print("And finally , we close it. ")target.close() #调用close方法关闭文件 习题17 更多文件操作123456789101112131415161718192021222324252627from sys import argvfrom os.path import existsscript, from_file, to_file = argv #.py test.txt new_file.txtprint(f"Copying from &#123;from_file&#125; to &#123;to_file&#125;") # f "&#123;&#125;"in_file = open(from_file) #打开要拷贝的文件并赋值给in_fileindata = in_file.read() #对...调用.read方法print(f"The input file is &#123;len(indata)&#125; bytes long") #len() 以数值形式返回传递的字符串长度print(f"Does the output file exist?&#123;exists(to_file)&#125;")print("Ready, hit RETURN to continue, CTRL_C to abort. ")input()out_file = open(to_file, 'w')out_file.write(indata)print("Alright, all done.")out_file.close()in_file.close()#bogon:lpthw Mr.Lv$ echo "This is a test file." &gt; test.txt 把“”里的内容写到text.txt里#bogon:lpthw Mr.Lv$ cat test.txt cat这个命令显示文件内容 习题18 命名、变量、代码和函数1234567891011121314151617def print_two(*args):arg1,arg2 = argsprint(f"arg1 : &#123;arg1&#125;, arg2 : &#123;arg2&#125;")def print_two_again(arg1, arg2):print(f"arg1 : &#123;arg1&#125;, arg2 : &#123;arg2&#125;")def print_one(arg1):print(f"arg1 : &#123;arg1&#125;")def print_none():print("I got nothin'.")print_two("Zed","Shaw")print_two_again( "Zed","Shaw")print_one("first!")print_none() 习题19 函数和变量12345678910111213141516171819202122def cheese_and_crackers(cheese_count, boxes_of_crackers):print(f"You have &#123;cheese_count&#125; cheeses!")print(f"You have &#123;boxes_of_crackers&#125; boxes of crackers!")print("Man that's enough for a party!")print("Get a blanket.\n")print("We can just give the function numbers directly:")cheese_and_crackers(20, 30)print("OR, we can use variable from our script")amout_of_cheese = 10amout_of_crackers = 50cheese_and_crackers(amout_of_cheese, amout_of_crackers)print("We can even do math inside too:")cheese_and_crackers(10 + 20, 5 + 6 )print("And we can combine the two, variables and math:")cheese_and_crackers(amout_of_cheese + 100, amout_of_crackers + 1000#在使用函数给参数赋值时，可以采取多种方式 习题20 函数和文件from sys import argv script, input_file = argv def print_all(f): print(f.read()) def rewind(f): f.seek(0) def print_a_line(line_count, f): print(line_count, f.readline()) current_file = open(input_file) print ("First let's print the whole file:\n") print_all(current_file) print("Now let's rewind, kind of like a tape.") rewind(current_file) print("Let's print three lines: ") current_line = 1 print_a_line(current_line, current_file) current_line = current_line + 1 print_a_line(current_line, current_file) current_line = current_line + 1 print_a_line(current_line, current_file)]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>“笨方法”学Python 3</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[学习「“笨方法”学Python 3」第一篇]]></title>
    <url>%2F2019%2F06%2F30%2Fpython%2Findex%2F</url>
    <content type="text"><![CDATA[本文整理并记录《“笨方法”学Python3》的习题内容，除了展示原文中的代码外，还记录了我在学习过程中遇到的问题。对我来说，这本书作为Python学习的入门教材再合适不过了，照着书本敲代码 -&gt; 将运行结果与原文正确结果对照 -&gt; 进行下一个练习并重复上述过程，这样的学习过程对于初学者来说很有成就感也容易快速入门。 断断续续学习《“笨方法”学Python3》（《Learn PYTHON 3 the HARD WAY》）有一段时间了，上次集中专注学习这本书还是在百词斩实习的时候🤨（艾老师催读的工作量…安排的不够饱和哦🤣） 这本书所谓的“笨方法”是指：1、从头到尾完成每一个习题（共52个）；2、一字不差地录入每一段程序；3、让程序运行起来。 在完成项目练习即习题45~52之前，我先来简单回顾下习题1~44教会了我什么？ 习题0 准备工作习题1 第一个程序123456print("Hello World")print("I like typing this")print("This is fun")print('Yay! Printing.')print("I'd much rather you 'not'.")print('I "said" do not touch this.') 习题2 注释和#号123print("I could have code like this")#and the comment after this is ignored#You can also use a "comment --&gt; #" to disable or comment out codeprint("This will run.") 习题3 数字和数学计算123456789101112131415161718192021print("I wll now count my chickens:")#print函数，打印语句print("Hens", 25 + 30 / 6) #Hens 30(是30.0!)先算术运算符后比较运算符（包含&lt;&gt;才算比较）25+5print("Roosters", 100 - 25 * 3 % 4) #Roosters 97 (%是取余/是除法)print("Now I will count my eggs:")#print函数，打印语句print(3 + 2 + 1 - 5 + 4 % 2 - 1 / 4 + 6) #6.75 （/ 除出来多少就是多少）print("Is it true that 3 + 2 &lt; 5 - 7?")print(3 + 2 &lt; 5 - 7)#先算术运算符然后比较运算符 注意优先级 #0（结果是False/true）print("What is 3 + 2?", 3 + 2) # 5 直接把语句（算术）的结果打印出来print("what is 5 - 7?", 5 - 7) # -2 直接把算术语句的结果打印出来print("Oh, that's why it's False") #print函数，打印语句print("How about some more.") #print函数，打印语句print("Is it greater?", 5 &gt; -2) #1 直接把语句（比较）的结果打印出来true/falseprint("Is it greater or equal?", 5 &gt;= -2) #1print("Is it less or equal?", 5 &lt;= -2) #0 习题4 变量和命名123456789101112131415cars = 100space_in_a_car = 4.0 # 试试4.0!!!看看结果有什么不同drivers = 30passengers = 90cars_not_driven = cars - driverscars_driven = driverscarpool_ocapacity = cars_driven * space_in_a_caraverage_passengers_per_car = passengers / cars_drivenprint("There are", cars, "cars availabe.") # 100print("There are only", drivers, "drivers availabe.") # 30print("There will be ", cars_not_driven, "empty cars today.") # 70print("We can transport", carpool_ocapacity, "people today.") #120.0print("We have", passengers, "to carpool today.") # 90print("We need to put about", average_passengers_per_car,"in each car.") # 3.0 习题5 更多的变量和打印123456789101112131415name = "Zed A. Shaw" # 显然’和”都可以age = 35height = 74weight = 180eyes = 'Bule' #像这样的名称是字符串要用引号括起来teeth ='White'hair = 'Brown'print(f"Let's talk about &#123;name&#125;.")#f就是format格式化字符串的意思print(f"He's &#123;weight&#125; inches tall.")print("Actually that's not too heavy.")print(f"He's got &#123;eyes&#125; eyes and &#123;teeth&#125; depending on coffees.")total = age + height + weightprint(f"If I add &#123;age&#125; , &#123;height&#125; , and &#123;weight&#125; I get &#123;total&#125;.") 习题6 字符串和文本12345678910111213141516171819202122types_of_people = 10 #对变量赋值x = f"There are &#123;types_of_people&#125; types of people" #对变量赋值，字符串就是”值”binary = 'binary'do_not = "don't"y = f"Those who know &#123;binary&#125; and those who &#123;do_not&#125;."print(x) #打印变量（字符串）print(y)print(f"I said: &#123;x&#125;") #f-stringprint(f"I also said: '&#123;y&#125;'")hilarious = Falsejoke_evalution = "Isn't that joke funny?! &#123;&#125;" #对变量赋值，print(joke_evalution.format(hilarious))w = "This is the left side of ..." #python可以用‘和“识别出来字符串e = "a string with a right side."print(w + e) 习题7 更多打印1234567891011121314151617181920print("Mary had a litte lamb.")print("Its fleece was white as &#123;&#125;.".format('snow')) #&#123;&#125; .format()print("And everywhere that Mary went.")print("."* 10) #打印10次字符串里面的内容end1 = 'c'end2 = 'h'end3 = 'e'end4 = 'e'end5 = 's'end6 = 'e'end7 = 'B'end8 = 'u'end9 = "r"end10 = "g"end11 = "e"end12 = "r"print(end1 + end2 + end3 + end4 + end5 + end6, end = ' ') #end = ''结尾不换行；end = ’ ’结尾不换行且加一个空格print(end7 + end8 + end9 + end10 + end11 + end12) 习题8 打印，打印123456789101112formatter = "&#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125; "print(formatter.format(1,2,3,4)) #赋值print(formatter.format("one","two","three","four")) #赋字符串print(formatter.format(True,False,False,True)) #赋值 相当于 1 0 0 1 #True 和 False是关键字 具有相应功能print(formatter.format(formatter,formatter,formatter,formatter))print(formatter.format("Try your","Own text here","Maybe a poam","Or a song about fear"))#没有换行哦 --&gt; “”“ ””“可以换行 习题9 打印，打印，打印123456789101112days = "Mon Tue Wen Thu Fri Sat Sun"months = "Jan\nFeb\nMar\nApr\nMay\nJun\nJul\nAug"print("Here are the days: ", days)print("Here are the months: ",months)print('''There's something going on there.With the three double-quotes.We'll be able to type as much as we like.Even 4 lines if we want , or 5, or 6.''') 习题10 那是什么123456789101112131415tabby_cat = "\tI'm tabbed in." #转义序列 \t 水平制表符persian_cat = "I'm split\non a line"backslash_cat = "I'm \\ a \\ cat."fat_cat = '''I'll do a list:\t* Cat food\t* Fishes\t* Catnip\n\t* Grass'''print(tabby_cat)print(persian_cat)print(backslash_cat)print(fat_cat)]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>“笨方法”学Python 3</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[实现Visual Studio Code界面毛玻璃效果]]></title>
    <url>%2F2019%2F06%2F20%2FVSCode%E6%AF%9B%E7%8E%BB%E7%92%83%2Findex%2F</url>
    <content type="text"><![CDATA[VSCode真的是一款强大的编程软件：它拥有众多类型的扩展和第三方库以及支持众多编程语言。在搭建并配置博客的过程中，本地静态博客的配置文件比如.yml.json.css.swig等各种格式的文件都可以用它打开并修改。如果它拥有一个更为漂亮简洁的UI界面，那势必会使生产力翻倍了！所以当我网上冲浪🏄并留意到美化VS Code界面的关键词时…!!! 本文介绍如何实现VS Code界面的毛玻璃效果~ 毛玻璃效果❌以及霓虹主题✅界面效果： 霓虹主题：代码高亮且呈现彩虹色🌈毛玻璃效果：界面半透明状态 –&gt; 类似于模糊桌面背景 霓虹主题效果： 毛玻璃效果 操作步骤下载「关键字高亮」主题插件 打开VS Code在extension扩展栏里搜索并下载扩展应用“Synthwave ‘86” VS Code设置在设置中搜索setting.json并在该文件中添加如下代码： 1terminal.integrated.rendererType": "dom" 下载Custom CSS and JS Loader插件用于自定义.css和.js文件 打开VS Code在extension扩展栏里搜索并下载扩展应用“Custom CSS and JS Loader” 毛玻璃样式配置新建custom.css文件：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899:root&#123;--vibrancy-dark: rgba(0,0,0,.2);--vibrancy-light: rgba(255,255,255,.2);&#125;html &#123;background: transparent !important;&#125;.scroll-decoration &#123;box-shadow: none !important;&#125;.minimap &#123;opacity: 0.6;background-color: transparent !important;&#125;.editor-container &#123;background: transparent !important;&#125;.search-view .search-widget .input-box, .search-view .search-widget .input-box .monaco-inputbox,.monaco-workbench&gt;.part.editor&gt;.content&gt;.one-editor-silo&gt;.container&gt;.title .tabs-container&gt;.tab,.monaco-editor-background,.monaco-editor .margin,.monaco-workbench&gt;.part&gt;.content,.monaco-workbench&gt;.editor&gt;.content&gt;.one-editor-silo.editor-one,.monaco-workbench&gt;.part.editor&gt;.content&gt;.one-editor-silo&gt;.container&gt;.title,.monaco-workbench&gt;.part&gt;.title,.monaco-workbench,.monaco-workbench&gt;.part,body &#123;background: transparent !important;&#125;.editor-group-container&gt;.tabs &#123;/* background-color: rgba(37, 37, 37,0.2) !important; */background: transparent !important;/* box-shadow: 0 1px 10px -2px gray; */&#125;.editor-group-container&gt;.tabs .tab &#123;background-color: transparent !important;&#125;.editor-group-container&gt;.tabs .tab.active * &#123;color: #fff !important;background-color: transparent !important;&#125;.monaco-list.settings-toc-tree .monaco-list-row.focused &#123;outline-color: rgb(37, 37, 37,0.6) !important;&#125;.monaco-list.settings-toc-tree .monaco-list-row.selected,.monaco-list.settings-toc-tree .monaco-list-row.focused,.monaco-list .monaco-list-row.selected,.monaco-list.settings-toc-tree:not(.drop-target) .monaco-list-row:hover:not(.selected):not(.focused) &#123;/* background-color: rgb(37, 37, 37,0.6) !important; */color: #00aaee;&#125;.monaco-list.settings-editor-tree .monaco-list-row &#123;background-color: transparent !important;outline-color: transparent !important;&#125;.monaco-inputbox &#123;background-color: rgba(41, 41, 41,0.2) !important;&#125;.monaco-editor .selected-text &#123;background-color: rgba(58, 61, 65,0.6) !important;&#125;.monaco-editor .focused .selected-text &#123;background-color: rgba(38, 79, 120,0.6) !important;&#125;.monaco-editor .view-overlays .current-line &#123;border-color: rgba(41, 41, 41,0.2) !important;&#125;.extension-editor,.monaco-inputbox&gt;.wrapper&gt;.input,.monaco-workbench&gt;.part.editor&gt;.content&gt;.one-editor-silo&gt;.container&gt;.title .tabs-container&gt;.tab.active,.preferences-editor&gt;.preferences-header,.preferences-editor&gt;.preferences-editors-container.side-by-side-preferences-editor .preferences-header-container,.monaco-editor, .monaco-editor .inputarea.ime-input &#123;background: transparent !important;&#125;.editor-group-container&gt;.tabs .tab &#123;border: none !important;&#125;.panel.integrated-terminal,.panel.integrated-terminal *&#123;background: transparent !important;&#125; 新建custom.js文件1nodeRequire('electron').remote.getCurrentWindow().setVibrancy('ultra-dark'); VS Code设置在setting.json中添加如下代码： 12345"vscode_custom_css.imports": ["file:///Users/MyUserName/Documents/custom.css",//注意确定好文件路径"file:///Users/MyUserName/Documents/custom.js" //注意确定好文件路径],"vscode_custom_css.policy": true 执行配置操作在VS Code中执行命令（Commond+Shift+P）： 1Reload Custom CSS and JS 然后在右下角弹出的对话框里选择Restart Visual Studio Code。 ⚠️目前经过多次尝试，设置霓虹主题成功但开启毛玻璃效果失败：在以上所有操作结束后应该 出现正确效果，但我的界面弹出Code已损坏请重新下载。🚫注意！！！Mac OS端可以实现以上效果，Windows端不可以。]]></content>
      <categories>
        <category>搭建博客</category>
      </categories>
      <tags>
        <tag>VS Code</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[写在前面]]></title>
    <url>%2F2019%2F06%2F15%2FAboutMyblog%2Findex%2F</url>
    <content type="text"><![CDATA[基于 hexo &amp; github 搭建个人博客👀 1、🔧本地部署博客 ✅6.15方所 青柠玫瑰茶（超级难喝🙁 2、⛏远程部署到 ✅6.17伊藤洋华堂Starbucks 西柚雪伯爵（超级好喝🙂 待办清单解析网站域名 &amp; 跳转1www.lumos.net.cn✅6.18 默认网址: https://lumos0314.github.io/ 配置NexT界面环境12345678910111213141516171819202122232425语言🇨🇳✅6.18文件夹分类📂✅6.18添加微信✅6.20打赏功能✅6.20添加标签Tag✅6.20（添加多个标签✅7.7）回到顶部按钮➕阅读百分比✅7.1添加「标签」页面✅7.7添加「分类」页面✅7.7添加「公益404」页面✅7.7添加图片内容✅7.8添加网站访问统计✅7.8增加站内🔍搜索功能✅7.8添加文章评论功能侧边栏➕头像✅7.8侧边栏➕链接✅7.7隐藏底部logo✅7.8页面layout右上角添加ForkMeOnGithub✅7.9添加页面动画live2d✅7.8（页面适当位置调整✅）点击出现💕特殊效果✅7.9网页动态效果🐻✅7.9增加「博文置顶」功能并添加置顶🔝符号✅7.11优化加载速度（使用gulp对博文中的js、css、img等文件进行压缩✅7.11添加网易云音乐外链🔗✅7.11更改网站图标✅7.11(Chrome浏览器可显示更改图标)网站内容可在百度谷歌上搜索🔍 More to do: 上传速度太慢~ 发布新文章12345「关于我」专栏写作✅7.11Intresting things OS X/Mac/Apps✅6.30Fine ArtsPhotograghs More to do: Invite 👬 to add some articles 尝试不同主题12landscapeGithub自带的主题 More to do: Github – NexT配置]]></content>
      <categories>
        <category>搭建博客</category>
      </categories>
      <tags>
        <tag>概述</tag>
      </tags>
  </entry>
</search>
