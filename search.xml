<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[The Excelsior Plan]]></title>
    <url>%2F2019%2F09%2F04%2FGOAT%2Findex%2F</url>
    <content type="text"><![CDATA[One Year Study and Life Plan #佛系养生计划# #Useful Links# #人生可持续发展规划# #Some Flags🚩# #规律作息# #护肤美白# #健康生活方式# #19/20 MSc Electronic and Computer Engineering, University of Birmingham, England, UK# 2019.9.22~2020.9.5自律•养生•修仙•健康•习惯1、invisalign牙套毕业-坚持到第47副牙套2、塑形健身：减掉小肚子、练出肌肉💪-坚持去健身房3、改善形体：预防颈椎病、消除高低肩、预防腰间盘突出：猫式坐姿&amp;不跷二郎腿、缓解骨盆前倾-瑜伽垫上勤练习4、戒糖：不喝奶茶、少吃甜食-一杯都不买5、拥有不错的厨艺：比如会做?道菜-练习6、毕业👩‍🎓时取得好成绩：课前预习、课后复习讲义等-学习态度端正7、美白护肤-坚持使用化妆品8、坚持记账-鲨鱼记账app用起来9、可以用流利的英文交流10、看一场球赛11、听一场演唱会]]></content>
      <categories>
        <category>人生感悟</category>
      </categories>
      <tags>
        <tag>🚩Flag</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[There's always time for Plan B]]></title>
    <url>%2F2019%2F08%2F26%2F%E6%84%9F%E6%82%9F2%2Findex%2F</url>
    <content type="text"><![CDATA[俗话说：在18岁的时候，对各种学科完全没有概念的时候，就要选择自己的专业；在22到25岁的时候，对职业发展毫无头绪的时候，就要选择自己未来的职业方向；在30岁涉世未深，对人的情感和生活没有深刻理解的时候，就要选择自己终身的伴侣。 （选择自己终身的伴侣这件事先往后放一放，毕竟我过了年才18。 /(^o^)/）话说我正处于22岁这个人生转折点上，对于自己未来的职业方向不是那么那么得明确和坚定，不是因为我没仔细考虑过“自己是谁？适合什么？该做什么？”，而是因为我的选择有很多。如果说18到22岁的本科阶段可以任由我天马行空，从一个点向各处发散，去探索未知的领域，去尝试意料之外的可能性，去满足永不满足的好奇心，那么从拿到学士学位证书的那一刻起（准确地说是那两刻起，因为我修了双学位），从一个点沿着一个方向延伸，在学术专业领域持续地深入研究，或是在职业发展的道路上越走越远，生活的重心该逐渐地稳稳地落在某个位置了。 我的生活重心该落在何处呢 ？Plan A：在英国读博（学术路上不断攀登）；Plan B: 英国硕士毕业回国工作（做技术相关工作或产品相关工作或教雅思写文书hh）；Plan C：Gap一年再去读博（🇺🇸or🇬🇧）。 因此，在英国伯明翰大学「电子和计算机工程」专业读研究生的这一年里，我唯一的目标就是：通过全力以赴地学习来判断自己是否对专业领域感兴趣，若是：则确定未来的科研小方向，若否：则锻炼好专业技能回国找份工作。 目前，计划把「机器学习」作为我这一年学习的重点。无论是确定读博的科研小方向（如自然语言处理、数据分析与数据挖掘、深度学习、神经智能网络等），还是在互联网公司找一份做算法岗的相关工作，熟练掌握机器学习的知识技能，都将起到至关重要的作用。当然，我的Plan A是带着PhD的学位滚回中国🇨🇳。尽管读博无异于赌博，但值得尝试。理由很简单： The answer is: you won’t know till you try. But if you don’t try to do what you love — whether it is painting or biology or finance; if you don’t pursue what you think will be most meaningful, you will regret it. Life is long. There is always time for Plan B. But don’t begin with it.答案是：你不试试就永远都不会知道。但如果你不试着去做自己热爱的事情，不管是玩泥巴还是生物还是金融，如果连你自己都不去追求你认为最有价值的事，你终将后悔。人生路漫漫，你总有时间去给自己留“后路”，但可别一开始就走“后路”。 来自于哈佛女校长在毕业典礼上的讲话：职业选择与幸福寻找。]]></content>
      <categories>
        <category>人生感悟</category>
      </categories>
      <tags>
        <tag>🚩Flag</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[学习「TED:为什么舒适会毁了你的生活」]]></title>
    <url>%2F2019%2F08%2F03%2FTED%E8%BF%9C%E7%A6%BB%E8%88%92%E9%80%82%2Findex%2F</url>
    <content type="text"><![CDATA[]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>TED</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何长时间高效学习？]]></title>
    <url>%2F2019%2F07%2F12%2F%E5%A6%82%E4%BD%95%E9%95%BF%E6%97%B6%E9%97%B4%E9%AB%98%E6%95%88%E5%AD%A6%E4%B9%A0%EF%BC%9F%2Findex%2F</url>
    <content type="text"><![CDATA[]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>知乎</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何长时间高效学习？]]></title>
    <url>%2F2019%2F07%2F12%2Food_uml%2Findex%2F</url>
    <content type="text"><![CDATA[]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>知乎</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何长时间高效学习？]]></title>
    <url>%2F2019%2F07%2F12%2Fpython_game%2Findex%2F</url>
    <content type="text"><![CDATA[]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>知乎</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[友邻优课「每日外刊精读计划」]]></title>
    <url>%2F2019%2F07%2F12%2F%E5%8F%8B%E9%82%BB%E4%BC%98%E8%AF%BE%2Findex%2F</url>
    <content type="text"><![CDATA[今天是友邻优课每日外刊精读的Day1，毕业前就把“假期好好学英语”这个计划提上日程了！本文作为我学习此课程过程中的线上笔记本，我会每日更新当天的笔记，方便我睡前翻看~ 写在前面我很熟悉线上英语付费课程的运营模式，所以当我：关注友邻优课的公众号-报名每日外刊精读课程并付费-添加老师微信-收到老师开课提醒-收到老师链接邀请入群-开始在APP上的第一次学习时，不禁回想起我成为52期薄荷阅读奇迹男孩课程老师Edward的第一天…..日常感慨：日子过得好快啊😏 学习目的自从4月20日从bcz离职后，就再没碰过英语了，自身英语功力退步的同时😂 在pyq看到不少人提前去🇬🇧读语言班了🌚 害怕自己去了英国之后跟不上呀，于是报名友邻优课跟着每天精读外刊：1、不花钱是根本没动力学习啊（坚持学习80天/共100天可全额退款）；2、能帮助我养成 坚持每天学点儿英语 的习惯啊！ 学习方法考过四六级、托福、雅思的我：英语学习体系已经基本形成了！（骄傲脸-_-） 像我这么懒的人在学习英语的过程中，研究琢磨出了适合自己（懒人）的学习方法：在学习英语时，同一时间内调动各种能调用的器官！耳朵听、眼睛看、动手写、嘴巴说。这样的学习方式相当于在同一时间内重复了四遍！重复的次数越多记忆效果越好，就能逐渐就培养出语感了… 通过对本次课程学习材料的分析，制定了有针对性的训练计划，具体如下： 1、（刷牙洗脸护肤洗澡吃饭无聊时）打开YLYK的App播放「讲解版」：就是中文为主混杂英文的那种对阅读材料的讲解（泛听：对当天学习内容有个大体了解 2、切换到「朗读版」开始循环播放（看着阅读材料进行影子跟读：比音频慢半拍跟读且不按暂停，读得卡顿的地方就是不熟不会的，在随后几遍的跟读过程中要留意这些地方 3、看「讲解版」文字部分的解析，如有的单词短语没有解析就自己查词典，解决掉影子跟读时不会和不熟的单词和短语 4、再切换回「朗读版」开始循环播放（尝试脱离阅读材料进行影子跟读，直到完全不看阅读材料就能全文影子跟读 5、整理记录当天学到的不会和不熟的单词短语以及好的句式结构 学习笔记用以上的学习方法坚持学习「每日精读外刊」，在下面记录笔记：]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>友邻优课</tag>
        <tag>每日外刊精读计划</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[学习「“笨方法”学Python 3」第四篇]]></title>
    <url>%2F2019%2F07%2F10%2Fpython4%2Findex%2F</url>
    <content type="text"><![CDATA[习题31 做出决定1234567891011121314151617181920212223242526272829303132333435363738print("""You enter a dark room with two doors,Do you go through door #1 or door #2?""")door = input("&gt; ")if door == "1": print("There's a giant bear here eating a cheese cake. ") print("What do you do? ") print("1. Take the cake. ") print("2. Scream at the bear. ") bear = input("&gt; ") if bear == "1": print("The bear eats your face off. Good job! ") elif bear == "2": print("The bear eats your leggs off. Good job! ") else: print(f"Well, doing &#123;bear&#125; is probably better. ") print("Bear runs away. ")elif door == "2": print(" You stare into the endless abyss at Cthulhu's retina.") print("1. Blueberries. ") print("2. Yellow jacket clothespins. ") print("3. Understanding revolves yelling melodies. ") insantity = input("&gt; ") if insantity == "1" or insantity == 2: print("Your body survives powered by a mind of jello. ") print("Good job! ") else: print("The insantity rots your eyes into a pool of muck. ") print("Good job! ")else: print("You stumblr around and fall on a knife and die. Good job! ") 习题32 循环和列表12345678910111213141516171819202122the_count = [1,2,3,4,5]fruits = ['apple', 'oranges', 'pears', 'apricots']change = [1,'pennies', 2, 'dimes', 3 , 'quarters']for number in the_count: print(f"This is count &#123;number&#125;")for fruit in fruits: print(f"A fruit of type : &#123;fruit&#125;")for i in change: print(f"I got &#123;i&#125;")elements = []for i in range(0, 6): print(f"Adding &#123;i&#125; to the list. ") elements.append(i)for i in elements: print(f"Element was : &#123;i&#125;") 习题33 while循环123456789101112131415i = 0numbers = []while i &lt; 6 : print(f"At the top i is &#123;i&#125; ") numbers.append(i) i += 1 print("Numbers now : ", numbers) print(f"At the bottom i is &#123;i&#125; ")print("The numbers: ")for num in numbers: print(num) 习题34 访问列表的元素123#animals = ['bear','tiger','penguine','zebra']#bear = animals[0]#访问列表里的第一个元素 习题35 分支和函数1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677from sys import exitdef gold_room():print("This room is full of gold. How much do you take? ")choice = input("&gt; ")if "0" in choice or "1" in choices:how_much = int(choice)else:dead("Man, learn to type a number. ")if how_much &lt; 50:print("Nice, you're not greedy, you win! ")exit(0)else:dead("You greedy bastard!")def bear_room():print("There is a bear here. ")print("The bear has a bunch of another door. ")print("The fat bear is in front of another door. ")print("How are you going to move the bear? ")bear_moved = Falsewhile True:choice = input("&gt; ")if choice == "take money":dead("The bear looks at you then slaps your face off. ")elif choice == "taunt bear" and not bear_moved:print("The bear has moved from the door. ")print("You can go through it now. ")bear_moved = Trueelif choice == "taunt bear" and bear_moved:dead("The bear gets pissed off and chews your leggs off. ")elif choice == "open door" and bear_moved:gold_room()else :print("I got no idea what that means. ")def cthulhu_room():print("Here you see the great evil Cthulhu. ")print("He, it , whatever stares at you and you go insane. ")print("Do you flee for your life or eat your head? ")choice = input("&gt; ")if "flee" in choice:start()elif "head" in choice:dead("Well that was tasty! ")else:cthulhu_room()def dead(why):print(why, "Good job! ")exit(0)def start():print("You are in a dark room. ")print("There is a door to your right and left. ")print("Which one do you take? ")choice = input("&gt; ")if choice == "left":bear_room()elif choice == "right":cthulhu_room()else:dead("You stumble around the room until you starve. ")start() 习题36 设计和调试12 习题37 复习各种符号12 习题38 列表的操作12345678910111213141516171819202122ten_things = "Apples Oranges Crows Telephone Light Sugar"print("Wait there are not 10 things in that list. Let's fix that. ")stuff = ten_things.split(' ')more_stuff = ["Day", "Night", "Song" ,"Frisbee", "Corn", "Banana", "Girl", "Boy"]while len(stuff) != 10:next_one = more_stuff.pop(0)print("Adding: ",next_one)stuff.append(next_one)print(f"There are &#123;len(stuff)&#125; items now. ")print("There we go: ", stuff)print("Let's do some things with stuff. ")print(stuff[1])print(stuff[-1])print(stuff.pop())print(' '.join(stuff))print('#'.join(stuff[3:5])) 习题39 字典，可爱的字典123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051states = &#123;'Oregon':'OR','Florida':'FL','California':'CA','New York':'NY','Michigan':'MI'&#125;cities = &#123;'CA': 'San Francisco','MI':'Detroit','FL':'Jacksonville'&#125;cities['NY'] = 'New York'cities['OR'] = 'Fortland'print('-' * 10)print('NY State has:', cities['NY'])print("OR State has:", cities['OR'])print('-' * 10)print("Michigan's abbrevition is: ", states['Michigan'] )print("Florida's abbrevition is: ", states['Florida'])print('-' * 10)print("Michigan's has: ", cities[states['Michigan']] )print("Florida's has: ", cities[states['Florida']])print('-' * 10)for state, abbrev in list(states.items()):print(f"&#123;state&#125; is abbrevited &#123;abbrev&#125;")print('-' * 10)for abbrev, city in list(cities.items()):print(f"&#123;abbrev&#125; has the city &#123;city&#125;")print('-' * 10)for state, abbrev in list(states.items()):print(f"&#123;state&#125; state is abbrevited &#123;abbrev&#125;")print(f"and has city &#123;cities[abbrev]&#125;")print('-' * 10)state = states.get('Texas')if not state:print("Sorry, no Texas.")city = cities.get('Tx','Does Not Exist')print(f"The city for the state 'TX' is: &#123;city&#125;") 习题40 模块、类和对象class Song(object): def __init__(self, lyrics): self.lyrics = lyrics def sing_me_a_song(self): for line in self.lryics: print(line) happy_bday = Song(["Happy birthday to you", "I don't want to get sued", "So I'll stop right there"]) bulls_on_parade = Song(["They rally aroud the family", "With pockets full of shells"]) happy_bday.sing_me_a_song() bulls_on_parade.sing_me_a_song() # __init__ 左右下划线是两个]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>“笨方法”学Python 3</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[学习「TED:滚蛋吧！小情绪」]]></title>
    <url>%2F2019%2F07%2F08%2FTED%E6%BB%9A%E8%9B%8B%E5%90%A7%E5%B0%8F%E6%83%85%E7%BB%AA%2Findex%2F</url>
    <content type="text"><![CDATA[]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>TED</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[学习「“笨方法”学Python 3」第三篇]]></title>
    <url>%2F2019%2F07%2F07%2Fpython3%2Findex%2F</url>
    <content type="text"><![CDATA[习题21 函数可以返回某些东西123456789101112131415161718192021222324252627282930def add(a, b):print(f"ADDING &#123;a&#125; + &#123;b&#125;")return a + bdef substract(a, b):print(f"SUBSTRACTING &#123;a&#125; - &#123;b&#125;")return a - bdef multiply(a, b):print(f"MULTIPLYING &#123;a&#125; * &#123;b&#125;")return a * bdef divide(a, b):print(f"DIVIDING &#123;a&#125; / &#123;b&#125; ")return a / bprint("Let's do some math with just functions! ")age = add(30, 5)height = substract(78, 4)weight = multiply(90 , 2)iq = divide(100, 2)print(f"Age:&#123;age&#125;, Height:&#123;height&#125;, Weight:&#123;weight&#125;, Iq:&#123;iq&#125;")print("Here is a puzzle.")what = add(age, substract(height, multiply(weight,divide(iq, 2)))) #从里到外print("That's becomes: ", what , "Can u do it by hand? ") 习题22 到现在为止你都学到了什么123#回顾之前遇到的每一个词和每一个符号 #说明他们的作用 #做一份列表 习题23 字符串、字节串和字符编码12345678910111213141516171819import sysscript, encoding, error = sys.argvdef main(language_file, encoding, errors): line = language_file.readline() if line: print_line(line, encoding, errors) return main(language_file, encoding, error)def print_line(line, encoding, errors): next_lang = line.strip() raw_bytes = next_lang.encode(encoding, errors = errors) cooked_string =raw_bytes.decode(encoding,errors = errors)print(raw_bytes, "&lt;===&gt;",cooked_string)languages = open("languages.txt", encoding = "utf-8")main(languages, encoding, error) 习题24 更多的练习12345678910111213141516171819202122232425262728293031323334353637383940print("Let's practice everything. ")print('You\'d need to know \'bout escapes with \\ that do:') #\后分别显示‘ ’ \print('\n newlines and \t tabs. ') #换行和水平制表，注意\n后面有个空格poem = """ #'''和下一行不在同一行，因此这一行有个空格\tThe lovely worldwith logic so firmly plantedcannot discern \n the needs of lovenor comprehand passion from intuitionand requires an expanation\n\t\twhere there is none."""print("-----------")print(poem)print("-----------")five = 10 - 2 + 3 - 6print(f"This should be five: &#123;five&#125;")def secret_formula(started):jelly_beans = started * 500jars = jelly_beans / 1000crates = jars / 100return jelly_beans, jars , cratesstart_point = 10000beans , jars, crates = secret_formula(start_point)print("With a staring point of: &#123;&#125;".format(start_point)) #调用方法，方法里有参数print(f"We'd have &#123;beans&#125;, &#123;jars&#125; jars, and &#123;crates&#125; crates. ")start_point = start_point / 10print("We can also do that this way:")formula = secret_formula(start_point)print("We'd have &#123;&#125; beans , &#123;&#125;jars, and &#123;&#125; crates.".format(*formula)) #因为函数有返回值 习题25 更多更多的练习12345678910111213141516171819202122232425262728293031323334353637383940print("Let's practice everything. ")print('You\'d need to know \'bout escapes with \\ that do:') #\后分别显示‘ ’ \print('\n newlines and \t tabs. ') #换行和水平制表，注意\n后面有个空格poem = """ #'''和下一行不在同一行，因此这一行有个空格\tThe lovely worldwith logic so firmly plantedcannot discern \n the needs of lovenor comprehand passion from intuitionand requires an expanation\n\t\twhere there is none."""print("-----------")print(poem)print("-----------")five = 10 - 2 + 3 - 6print(f"This should be five: &#123;five&#125;")def secret_formula(started):jelly_beans = started * 500jars = jelly_beans / 1000crates = jars / 100return jelly_beans, jars , cratesstart_point = 10000beans , jars, crates = secret_formula(start_point)print("With a staring point of: &#123;&#125;".format(start_point)) #调用方法，方法里有参数print(f"We'd have &#123;beans&#125;, &#123;jars&#125; jars, and &#123;crates&#125; crates. ")start_point = start_point / 10print("We can also do that this way:")formula = secret_formula(start_point)print("We'd have &#123;&#125; beans , &#123;&#125;jars, and &#123;&#125; crates.".format(*formula)) #因为函数有返回值 习题26 恭喜你，现在j可以考试了！12345678910111213141516171819202122232425262728293031323334353637383940print("How old are you?", end=' ')age = input()print("How tall are you?", end=' ')height = input()print("How much do you weigh?", end=' ')weight = input()print(f"So, you're &#123;age&#125; old, &#123;height&#125; tall and &#123;weight&#125; heavy.")script, filename = argvtxt = open(filenme)print("Here's your file &#123;filename&#125;:")print(tx.read())print("Type the filename again:")file_again = input("&gt; ")txt_again = open(file_again)print(txt_again_read())print('Let\'s practice everything.')print('''You\'d need to know \'bout escapeswith \\ that do \n newlines and \t tabs.''')poem = """\tThe lovely worldwith logic so firmly plantedcannot discern \n the needs of lovenor comprehend passion from intuitionand requires an explanation\n\t\twhere there is none."""print("--------------")print(poem)print("--------------") 习题27 记住逻辑关系12#and：与（既...又 全true才true#or：或（有true即true 习题28 布尔表达式练习1print(3 != 4 and not ("testing" != "test" or "Python" == "Python")) 习题29 if语句123456789101112131415161718192021222324252627#if下一行4个空格缩进#4个空格常被作为缩进排版的一个单位。缩进的确切解释并未详细指定(使用空格还是tab).Tab一定要设置为8个空格 (而非4个)。people = 20cats = 30dogs = 15if people &lt; cats: #20&lt;30? 1 打印 print("Too many cats!The world is doomed! ")if people &gt; cats: #20&gt;30? 0 print("Not many cats!The world is saved! ")if people &lt; dogs: #20&lt;15? 0 print("The world is drooled on! ")if people &gt; dogs: #20&gt;15 1 打印 print("The world is dry! ")dogs += 5 #20if people &gt;= dogs: #20&gt;=20 1 打印 print("People are greater than or equal to dogs. ")if people &lt;= dogs: #20&lt;=20 1 打印 print("People are less than or equal to dogs. ")if people == dogs: #20=20 1 打印 print("People are dogs. ") 习题30 else和if#if elif else后面都有： people = 30 cars = 40 trucks = 15 if cars &gt; people: print("We should take the cars. ") elif cars &lt; people: print("We should not take the cars. ") else: print("We can't decide. ") if trucks &gt; cars: print(" That's too many trucks. ") elif trucks &lt; cars: #if不满足看elif满不满足，而不是else（先elif再else 并列就按先后顺序来 print("Maybe we coule take the trucks. ") else: print("We still can't decide. ") if people &gt; trucks: print("Alright , let's just take the trucks. ") else: print("Fine, let's stay home then. ")]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>“笨方法”学Python 3</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一言]]></title>
    <url>%2F2019%2F07%2F03%2F%E6%84%9F%E6%82%9F%2Findex%2F</url>
    <content type="text"><![CDATA[洗澡的时候粗略听完了「知乎live：如何高效阅读英文文献–毛羽立」，并浏览了作者的高赞回答： 为什么有的人好像什么都知道但现实中却一事无成？毛羽立的回答：🔗https://www.zhihu.com/question/24230372/answer/27132195 （未完待续…]]></content>
      <categories>
        <category>人生感悟</category>
      </categories>
      <tags>
        <tag>感悟</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用一款实用app「duet」把iPad Pro作为Macbook Pro扩展屏]]></title>
    <url>%2F2019%2F07%2F03%2Fduet%2Findex%2F</url>
    <content type="text"><![CDATA[记得2016年左右我曾尝试用duet把iPad Air2作为Macbook的扩展屏，那时候由于duet刚在App Store推出不久且是付费软件，用户并没有太多，我的使用频率也不高。自从我把设备升级成iPad Pro和Macbook Pro后，因为这两款更新后的设备屏幕尺寸大、屏占比大，所以没有把iPad作为扩展屏的必要。 今年九月份苹果即将推出macOS Catalina以取代macOS Mojave，在新版本的系统中会增加如今duet所能实现的功能（Sidecar：Apps on macOS Catalina automatically support an expanded workspace with iPad and Apple Pencil.）。在duet变得鸡肋前，我当然是要充分高效的使（榨）用（干）它了！☃️ 实测效果VS Code和terminal分屏显示😘 屏幕保护程序aerial和duet相得益彰🧐 以上是用「duet」把iPad Pro作为Macbook Pro扩展屏的实际效果图，实测体验感极佳。iPad Pro的桌面为「桌面12」（Macbook Pro💻已创建11个桌面）：是可以把任何一个打开窗口分配到任何一个桌面中去，操作极其方便且没有学习成本。若想用iPad看长代码，则可如图直接把iPad竖屏，「duet」自动调整分辨率等。 当然在一切配置好之前也遇到了问题：无法分屏只能镜像显示。如下解决措施： 123更新mac端「duet」版本官方更新下载速度太慢且不是最新版本www.pc6.com下载2.7.4更新版本.zip]]></content>
      <categories>
        <category>好物推荐</category>
      </categories>
      <tags>
        <tag>App</tag>
        <tag>duet</tag>
        <tag>iPadPro</tag>
        <tag>MacbookPro</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[学习「TED:如何掌控你的自由时间」]]></title>
    <url>%2F2019%2F07%2F01%2FTED%E6%8E%8C%E6%8E%A7%E8%87%AA%E7%94%B1%E6%97%B6%E9%97%B4%2Findex%2F</url>
    <content type="text"><![CDATA[]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>TED</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[学习「“笨方法”学Python 3」第二篇]]></title>
    <url>%2F2019%2F07%2F01%2Fpython2%2Findex%2F</url>
    <content type="text"><![CDATA[习题11 提问12345678print("How old are you?") #可以在每行后面加end = ‘’age = input()print("How tall are you?")height = input()print("How much do you weight?")weight = input()print(f"So, you're &#123;age&#125; old , &#123;height&#125; tall and &#123;weight&#125; heavy.") 习题12 提问别人12345age = input("How old are you?") #输入提示 height = input("How tall are you?")weight = input("How much do you weigh?")print(f"So, you're &#123;age&#125; old , &#123;height&#125; tall and &#123;weight&#125; heavy.") 习题13 参数、解包和变量12345678from sys import argv #从系统导入参数 python3.7 exl13.py 中，exl13.py就是个参数script, first , second, third = input() # argv是unpack解包#不把所有的参数放到一个变量里，所以赋值给了4个变量#把argv中的东西取出，解包，将所有的参数依次赋值给左边的这些变量print("The script is called:", script)print("Your first variable is:", first)print("Your second variable is:", second)print("Your third variable is:", third) 习题14 提示和传递12345678910111213141516171819202122from sys import argvscript, user_name = argv #输入两个参数变量 解包prompt = '&gt; ' #先对prompt赋值print(f"Hi &#123;user_name&#125;, I'm the &#123;script&#125; script. ")print("I'd like to ask you a few questions.")print(f"Do you like me &#123;user_name&#125;?")likes = input(prompt) #提示输入print(f"Where do you live &#123;user_name&#125;?")lives = input(prompt)print("What kind of computer do you have? ")computer = input(prompt)print(f'''Alright, so you said &#123;likes&#125; about liking me.You live in &#123;lives&#125;. Not sure where that is.And you have a &#123;computer&#125; computer. Nice. #显示之前输入的内容''') 习题15 读取文件123456789101112131415from sys import argvscript, filename = argv #argv用来添加参数以获取文件名 filename就是打开的文件名txt = open(filename) #把文件打开并赋值给txtprint(f"Here's your file &#123;filename&#125;:") #打印文件名print(txt.read()) #打印文件内容 在txt上调用read（）函数 嘿txt执行你的read命令print("Type the filename again:")file_again = input("&gt;") #提示输入file nametxt_again = open(file_again) #把文件赋值给txt_againprint(txt_again.read()) #嘿txt_)txt_again执行你的read命令 然后print出来 习题16 读写文件123456789101112131415161718192021222324252627282930313233from sys import argvscript, filename = argvprint(f"We're going to erase &#123;filename&#125;.")print("If you don't want that, hit CTRL-C(^C). ")print("If you do want that, hit RETURN. ")input("?") #无论敲什么都会进行下面的...print("Openning the file...")target = open(filename, 'w') #w的模式打开print("Truncating the file. Goodbye! ")target.truncate() #调用truncate方法print("Now I'm going to ask you for three lines. ")line1 = input("line 1 : ")line2 = input("line 2 : ")line3 = input("line 3 : ")print("I'm going to write these to the file. ")target.write(line1) #调用write方法写入target.write("\n")target.write(line2)target.write("\n")target.write(line3)target.write("\n")print("And finally , we close it. ")target.close() #调用close方法关闭文件 习题17 更多文件操作123456789101112131415161718192021222324252627from sys import argvfrom os.path import existsscript, from_file, to_file = argv #.py test.txt new_file.txtprint(f"Copying from &#123;from_file&#125; to &#123;to_file&#125;") # f "&#123;&#125;"in_file = open(from_file) #打开要拷贝的文件并赋值给in_fileindata = in_file.read() #对...调用.read方法print(f"The input file is &#123;len(indata)&#125; bytes long") #len() 以数值形式返回传递的字符串长度print(f"Does the output file exist?&#123;exists(to_file)&#125;")print("Ready, hit RETURN to continue, CTRL_C to abort. ")input()out_file = open(to_file, 'w')out_file.write(indata)print("Alright, all done.")out_file.close()in_file.close()#bogon:lpthw Mr.Lv$ echo "This is a test file." &gt; test.txt 把“”里的内容写到text.txt里#bogon:lpthw Mr.Lv$ cat test.txt cat这个命令显示文件内容 习题18 命名、变量、代码和函数1234567891011121314151617def print_two(*args):arg1,arg2 = argsprint(f"arg1 : &#123;arg1&#125;, arg2 : &#123;arg2&#125;")def print_two_again(arg1, arg2):print(f"arg1 : &#123;arg1&#125;, arg2 : &#123;arg2&#125;")def print_one(arg1):print(f"arg1 : &#123;arg1&#125;")def print_none():print("I got nothin'.")print_two("Zed","Shaw")print_two_again( "Zed","Shaw")print_one("first!")print_none() 习题19 函数和变量12345678910111213141516171819202122def cheese_and_crackers(cheese_count, boxes_of_crackers):print(f"You have &#123;cheese_count&#125; cheeses!")print(f"You have &#123;boxes_of_crackers&#125; boxes of crackers!")print("Man that's enough for a party!")print("Get a blanket.\n")print("We can just give the function numbers directly:")cheese_and_crackers(20, 30)print("OR, we can use variable from our script")amout_of_cheese = 10amout_of_crackers = 50cheese_and_crackers(amout_of_cheese, amout_of_crackers)print("We can even do math inside too:")cheese_and_crackers(10 + 20, 5 + 6 )print("And we can combine the two, variables and math:")cheese_and_crackers(amout_of_cheese + 100, amout_of_crackers + 1000#在使用函数给参数赋值时，可以采取多种方式 习题20 函数和文件from sys import argv script, input_file = argv def print_all(f): print(f.read()) def rewind(f): f.seek(0) def print_a_line(line_count, f): print(line_count, f.readline()) current_file = open(input_file) print ("First let's print the whole file:\n") print_all(current_file) print("Now let's rewind, kind of like a tape.") rewind(current_file) print("Let's print three lines: ") current_line = 1 print_a_line(current_line, current_file) current_line = current_line + 1 print_a_line(current_line, current_file) current_line = current_line + 1 print_a_line(current_line, current_file)]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>“笨方法”学Python 3</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[学习「“笨方法”学Python 3」第一篇]]></title>
    <url>%2F2019%2F06%2F30%2Fpython%2Findex%2F</url>
    <content type="text"><![CDATA[本文整理并记录《“笨方法”学Python3》的习题内容，除了展示原文中的代码外，还记录了我在学习过程中遇到的问题。对我来说，这本书作为Python学习的入门教材再合适不过了，照着书本敲代码 -&gt; 将运行结果与原文正确结果对照 -&gt; 进行下一个练习并重复上述过程，这样的学习过程对于初学者来说很有成就感也容易快速入门。 断断续续学习《“笨方法”学Python3》（《Learn PYTHON 3 the HARD WAY》）有一段时间了，上次集中专注学习这本书还是在百词斩实习的时候🤨（艾老师催读的工作量…安排的不够饱和哦🤣） 这本书所谓的“笨方法”是指：1、从头到尾完成每一个习题（共52个）；2、一字不差地录入每一段程序；3、让程序运行起来。 在完成项目练习即习题45~52之前，我先来简单回顾下习题1~44教会了我什么？ 习题0 准备工作习题1 第一个程序123456print("Hello World")print("I like typing this")print("This is fun")print('Yay! Printing.')print("I'd much rather you 'not'.")print('I "said" do not touch this.') 习题2 注释和#号123print("I could have code like this")#and the comment after this is ignored#You can also use a "comment --&gt; #" to disable or comment out codeprint("This will run.") 习题3 数字和数学计算123456789101112131415161718192021print("I wll now count my chickens:")#print函数，打印语句print("Hens", 25 + 30 / 6) #Hens 30(是30.0!)先算术运算符后比较运算符（包含&lt;&gt;才算比较）25+5print("Roosters", 100 - 25 * 3 % 4) #Roosters 97 (%是取余/是除法)print("Now I will count my eggs:")#print函数，打印语句print(3 + 2 + 1 - 5 + 4 % 2 - 1 / 4 + 6) #6.75 （/ 除出来多少就是多少）print("Is it true that 3 + 2 &lt; 5 - 7?")print(3 + 2 &lt; 5 - 7)#先算术运算符然后比较运算符 注意优先级 #0（结果是False/true）print("What is 3 + 2?", 3 + 2) # 5 直接把语句（算术）的结果打印出来print("what is 5 - 7?", 5 - 7) # -2 直接把算术语句的结果打印出来print("Oh, that's why it's False") #print函数，打印语句print("How about some more.") #print函数，打印语句print("Is it greater?", 5 &gt; -2) #1 直接把语句（比较）的结果打印出来true/falseprint("Is it greater or equal?", 5 &gt;= -2) #1print("Is it less or equal?", 5 &lt;= -2) #0 习题4 变量和命名123456789101112131415cars = 100space_in_a_car = 4.0 # 试试4.0!!!看看结果有什么不同drivers = 30passengers = 90cars_not_driven = cars - driverscars_driven = driverscarpool_ocapacity = cars_driven * space_in_a_caraverage_passengers_per_car = passengers / cars_drivenprint("There are", cars, "cars availabe.") # 100print("There are only", drivers, "drivers availabe.") # 30print("There will be ", cars_not_driven, "empty cars today.") # 70print("We can transport", carpool_ocapacity, "people today.") #120.0print("We have", passengers, "to carpool today.") # 90print("We need to put about", average_passengers_per_car,"in each car.") # 3.0 习题5 更多的变量和打印123456789101112131415name = "Zed A. Shaw" # 显然’和”都可以age = 35height = 74weight = 180eyes = 'Bule' #像这样的名称是字符串要用引号括起来teeth ='White'hair = 'Brown'print(f"Let's talk about &#123;name&#125;.")#f就是format格式化字符串的意思print(f"He's &#123;weight&#125; inches tall.")print("Actually that's not too heavy.")print(f"He's got &#123;eyes&#125; eyes and &#123;teeth&#125; depending on coffees.")total = age + height + weightprint(f"If I add &#123;age&#125; , &#123;height&#125; , and &#123;weight&#125; I get &#123;total&#125;.") 习题6 字符串和文本12345678910111213141516171819202122types_of_people = 10 #对变量赋值x = f"There are &#123;types_of_people&#125; types of people" #对变量赋值，字符串就是”值”binary = 'binary'do_not = "don't"y = f"Those who know &#123;binary&#125; and those who &#123;do_not&#125;."print(x) #打印变量（字符串）print(y)print(f"I said: &#123;x&#125;") #f-stringprint(f"I also said: '&#123;y&#125;'")hilarious = Falsejoke_evalution = "Isn't that joke funny?! &#123;&#125;" #对变量赋值，print(joke_evalution.format(hilarious))w = "This is the left side of ..." #python可以用‘和“识别出来字符串e = "a string with a right side."print(w + e) 习题7 更多打印1234567891011121314151617181920print("Mary had a litte lamb.")print("Its fleece was white as &#123;&#125;.".format('snow')) #&#123;&#125; .format()print("And everywhere that Mary went.")print("."* 10) #打印10次字符串里面的内容end1 = 'c'end2 = 'h'end3 = 'e'end4 = 'e'end5 = 's'end6 = 'e'end7 = 'B'end8 = 'u'end9 = "r"end10 = "g"end11 = "e"end12 = "r"print(end1 + end2 + end3 + end4 + end5 + end6, end = ' ') #end = ''结尾不换行；end = ’ ’结尾不换行且加一个空格print(end7 + end8 + end9 + end10 + end11 + end12) 习题8 打印，打印123456789101112formatter = "&#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125; "print(formatter.format(1,2,3,4)) #赋值print(formatter.format("one","two","three","four")) #赋字符串print(formatter.format(True,False,False,True)) #赋值 相当于 1 0 0 1 #True 和 False是关键字 具有相应功能print(formatter.format(formatter,formatter,formatter,formatter))print(formatter.format("Try your","Own text here","Maybe a poam","Or a song about fear"))#没有换行哦 --&gt; “”“ ””“可以换行 习题9 打印，打印，打印123456789101112days = "Mon Tue Wen Thu Fri Sat Sun"months = "Jan\nFeb\nMar\nApr\nMay\nJun\nJul\nAug"print("Here are the days: ", days)print("Here are the months: ",months)print('''There's something going on there.With the three double-quotes.We'll be able to type as much as we like.Even 4 lines if we want , or 5, or 6.''') 习题10 那是什么123456789101112131415tabby_cat = "\tI'm tabbed in." #转义序列 \t 水平制表符persian_cat = "I'm split\non a line"backslash_cat = "I'm \\ a \\ cat."fat_cat = '''I'll do a list:\t* Cat food\t* Fishes\t* Catnip\n\t* Grass'''print(tabby_cat)print(persian_cat)print(backslash_cat)print(fat_cat)]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>“笨方法”学Python 3</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[实现Visual Studio Code界面毛玻璃效果]]></title>
    <url>%2F2019%2F06%2F20%2FVSCode%E6%AF%9B%E7%8E%BB%E7%92%83%2Findex%2F</url>
    <content type="text"><![CDATA[VSCode真的是一款强大的编程软件：它拥有众多类型的扩展和第三方库以及支持众多编程语言。在搭建并配置博客的过程中，本地静态博客的配置文件比如.yml.json.css.swig等各种格式的文件都可以用它打开并修改。如果它拥有一个更为漂亮简洁的UI界面，那势必会使生产力翻倍了！所以当我网上冲浪🏄并留意到美化VS Code界面的关键词时…!!! 本文介绍如何实现VS Code界面的毛玻璃效果~ 毛玻璃效果❌以及霓虹主题✅界面效果： 霓虹主题：代码高亮且呈现彩虹色🌈毛玻璃效果：界面半透明状态 –&gt; 类似于模糊桌面背景 霓虹主题效果： 毛玻璃效果 操作步骤下载「关键字高亮」主题插件 打开VS Code在extension扩展栏里搜索并下载扩展应用“Synthwave ‘86” VS Code设置在设置中搜索setting.json并在该文件中添加如下代码： 1terminal.integrated.rendererType": "dom" 下载Custom CSS and JS Loader插件用于自定义.css和.js文件 打开VS Code在extension扩展栏里搜索并下载扩展应用“Custom CSS and JS Loader” 毛玻璃样式配置新建custom.css文件：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899:root&#123;--vibrancy-dark: rgba(0,0,0,.2);--vibrancy-light: rgba(255,255,255,.2);&#125;html &#123;background: transparent !important;&#125;.scroll-decoration &#123;box-shadow: none !important;&#125;.minimap &#123;opacity: 0.6;background-color: transparent !important;&#125;.editor-container &#123;background: transparent !important;&#125;.search-view .search-widget .input-box, .search-view .search-widget .input-box .monaco-inputbox,.monaco-workbench&gt;.part.editor&gt;.content&gt;.one-editor-silo&gt;.container&gt;.title .tabs-container&gt;.tab,.monaco-editor-background,.monaco-editor .margin,.monaco-workbench&gt;.part&gt;.content,.monaco-workbench&gt;.editor&gt;.content&gt;.one-editor-silo.editor-one,.monaco-workbench&gt;.part.editor&gt;.content&gt;.one-editor-silo&gt;.container&gt;.title,.monaco-workbench&gt;.part&gt;.title,.monaco-workbench,.monaco-workbench&gt;.part,body &#123;background: transparent !important;&#125;.editor-group-container&gt;.tabs &#123;/* background-color: rgba(37, 37, 37,0.2) !important; */background: transparent !important;/* box-shadow: 0 1px 10px -2px gray; */&#125;.editor-group-container&gt;.tabs .tab &#123;background-color: transparent !important;&#125;.editor-group-container&gt;.tabs .tab.active * &#123;color: #fff !important;background-color: transparent !important;&#125;.monaco-list.settings-toc-tree .monaco-list-row.focused &#123;outline-color: rgb(37, 37, 37,0.6) !important;&#125;.monaco-list.settings-toc-tree .monaco-list-row.selected,.monaco-list.settings-toc-tree .monaco-list-row.focused,.monaco-list .monaco-list-row.selected,.monaco-list.settings-toc-tree:not(.drop-target) .monaco-list-row:hover:not(.selected):not(.focused) &#123;/* background-color: rgb(37, 37, 37,0.6) !important; */color: #00aaee;&#125;.monaco-list.settings-editor-tree .monaco-list-row &#123;background-color: transparent !important;outline-color: transparent !important;&#125;.monaco-inputbox &#123;background-color: rgba(41, 41, 41,0.2) !important;&#125;.monaco-editor .selected-text &#123;background-color: rgba(58, 61, 65,0.6) !important;&#125;.monaco-editor .focused .selected-text &#123;background-color: rgba(38, 79, 120,0.6) !important;&#125;.monaco-editor .view-overlays .current-line &#123;border-color: rgba(41, 41, 41,0.2) !important;&#125;.extension-editor,.monaco-inputbox&gt;.wrapper&gt;.input,.monaco-workbench&gt;.part.editor&gt;.content&gt;.one-editor-silo&gt;.container&gt;.title .tabs-container&gt;.tab.active,.preferences-editor&gt;.preferences-header,.preferences-editor&gt;.preferences-editors-container.side-by-side-preferences-editor .preferences-header-container,.monaco-editor, .monaco-editor .inputarea.ime-input &#123;background: transparent !important;&#125;.editor-group-container&gt;.tabs .tab &#123;border: none !important;&#125;.panel.integrated-terminal,.panel.integrated-terminal *&#123;background: transparent !important;&#125; 新建custom.js文件1nodeRequire('electron').remote.getCurrentWindow().setVibrancy('ultra-dark'); VS Code设置在setting.json中添加如下代码： 12345"vscode_custom_css.imports": ["file:///Users/MyUserName/Documents/custom.css",//注意确定好文件路径"file:///Users/MyUserName/Documents/custom.js" //注意确定好文件路径],"vscode_custom_css.policy": true 执行配置操作在VS Code中执行命令（Commond+Shift+P）： 1Reload Custom CSS and JS 然后在右下角弹出的对话框里选择Restart Visual Studio Code。 ⚠️目前经过多次尝试，设置霓虹主题成功但开启毛玻璃效果失败：在以上所有操作结束后应该 出现正确效果，但我的界面弹出Code已损坏请重新下载。🚫注意！！！Mac OS端可以实现以上效果，Windows端不可以。]]></content>
      <categories>
        <category>搭建博客</category>
      </categories>
      <tags>
        <tag>VS Code</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[写在前面]]></title>
    <url>%2F2019%2F06%2F15%2FAboutMyblog%2Findex%2F</url>
    <content type="text"><![CDATA[基于 hexo &amp; github 搭建个人博客👀 1、🔧本地部署博客 ✅6.15方所 青柠玫瑰茶（超级难喝🙁 2、⛏远程部署到 ✅6.17伊藤洋华堂Starbucks 西柚雪伯爵（超级好喝🙂 待办清单解析网站域名 &amp; 跳转1www.lumos.net.cn✅6.18 默认网址: https://lumos0314.github.io/ 配置NexT界面环境12345678910111213141516171819202122232425语言🇨🇳✅6.18文件夹分类📂✅6.18添加微信✅6.20打赏功能✅6.20添加标签Tag✅6.20（添加多个标签✅7.7）回到顶部按钮➕阅读百分比✅7.1添加「标签」页面✅7.7添加「分类」页面✅7.7添加「公益404」页面✅7.7添加图片内容✅7.8添加网站访问统计✅7.8增加站内🔍搜索功能✅7.8添加文章评论功能侧边栏➕头像✅7.8侧边栏➕链接✅7.7隐藏底部logo✅7.8页面layout右上角添加ForkMeOnGithub✅7.9添加页面动画live2d✅7.8（页面适当位置调整✅）点击出现💕特殊效果✅7.9网页动态效果🐻✅7.9增加「博文置顶」功能并添加置顶🔝符号✅7.11优化加载速度（使用gulp对博文中的js、css、img等文件进行压缩✅7.11添加网易云音乐外链🔗✅7.11更改网站图标✅7.11(Chrome浏览器可显示更改图标)网站内容可在百度谷歌上搜索🔍 More to do: 上传速度太慢~ 发布新文章12345「关于我」专栏写作✅7.11Intresting things OS X/Mac/Apps✅6.30Fine ArtsPhotograghs More to do: Invite 👬 to add some articles 尝试不同主题12landscapeGithub自带的主题 More to do: Github – NexT配置]]></content>
      <categories>
        <category>搭建博客</category>
      </categories>
      <tags>
        <tag>概述</tag>
      </tags>
  </entry>
</search>
